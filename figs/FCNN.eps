%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FCNN.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: Administrator
%%CreationDate: 2020/5/4, 16:35:02
%%BoundingBox: 0 0 236 276
%%HiResBoundingBox: 0 0 235.2201 275.0711
%%CropBox: 0 0 235.2201 275.0711
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 809 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2020-05-04T16:34:35+08:00"
   xmp:CreateDate="2020-05-04T16:33:36+08:00"
   xmp:MetadataDate="2020-05-04T16:34:35+08:00"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:f7a0936a-99f1-4272-9a81-e3a5ea25faac"
   xmpMM:InstanceID="uuid:1d37826a-ed89-4fdf-86b5-a972b6405c6c"
   pdf:Producer="iText® 5.3.4 ©2000-2012 1T3XT BVBA (AGPL-version)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -275.071 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 275.071 li
235.22 275.071 li
235.22 0 li
cp
clp
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (NLFCZI+SimSun-GBK-EUC-H)
%%Title: (NLFCZI+SimSun-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /NLFCZI+SimSun-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 14 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
3374 <001C60D8A8C9B5EE3100B249FE0972A1F213DE61D816DF1EAF23D42C08
0F518464B0E4071F77D6D6C42850EA4633881E106039D3E5A058ED2E3DD0406D
3DA23BCA01C13DA71313000B2116426CB411C9FC6BB7B4FA24746768B674FA67
17855C6D6142877D76C6C185231486C955453B5AF7550FA207164965E9817C74
E33F1ABF49998B1F6AA4E12B4726207884CB0435651AC11653B8400FC289A148
9C0A6E0F42ECE71ADF038302AF93C1A7D753E77EAAF8287678A1AF7EAEAAC6FB
04B751A6BB46E8AFA932D1BA07CBFD91820C5ED06F5C5F73DB7DD9D37D91F667
B2BFB6763DDA172F028EE8274FAF55E6F3B990DA4EAE953B08E9062E1F8AA65F
444AA40FA0865F2EAAE82CEF4A058CB789DE6BA9DD4C7A5D8D5346FAD43908B8
A1C2406C1CDBC2BA> |
21 <001C60D8A8C9B7A73DB9C53BB5D0A393A2047FD47350D2E4CFE49AB7DF02
A9275C93D085D1924F3FB7EEB24FE801DDD1FF576AB770A9CF206F8FECD52181
C2F2102CA1FEA19488395EF5B471B157DADF02C13C9C4B17852D280284450C63
972064F36B02F0D9D8824170509719B2834B78DF97F8CEB4B61B8B98A4837226
F9074C06268F52A598A5AA3DEBE2A49E5876A26870011588A4C381E7BA0EE6B7
FA4F20FFB2FE1484B73A6C863D02C40E3AF645370EF6B42DFE012CC9FD6A13CC
DF3A9AF5049333A4> |
3 <001C60D8A8C9B7A73D40> |
2471 <001C60D8A8C9B5EE3102B1E1E627D6F5C0A38C30F8FC56D25D9F9ADD72
AD63A9EBC71707A8E44EB7D6F546A1932652A9BC49BD3DE076F5C4234C5677FE
E85C93A837424FB23FD60FAF1A0BE77755116F1FD755C7817F2C88951F193A72
C09F89B5F68572AF4AF854E69BCC8350F83C8216E5468905D8B9FA36122EA15F
31C2D6C1262836A8C7313D59170526F0D826CB62DAA68B3979D3B047A29B9A12
5ED5F77DD40E7FDDA2F9CA7274001BB805FF1E7BB9277FB7EAAB3E61244B0273
1628B073E121E0CA9CE8DD88BB8BA0BBAF61B4C73DFEB3B49B175898A5B6AA88
2AA674372E5759312020196D499ECC911039C71DA28511245C7ED91E76352B7C
CDF32B5D099484B46D4FE045999B8FEC47255D44EAABA16354AD617755927BCF
3EFC9BC32D966744C2F9B5347120BB8DEBBA2694BD5C0004CB422788D116B62E
681F9F9B40DF267F27F01A806F3206391088847F7DC76C076AC164731DC41CC2
B4C2F174F517872611F0DEE42CC05E7F6F3D3E816690271D18A7A44EFC> |
12319 <001C60D8A8C9B5EE310282C72D2429AD0CF7EFF5B234B46D5C5AAA9C4
92C0E00868B0BFB198752A7A11B8FBA58BCD89F7CC3601DD014E1D8E4926B661
53B42B0658B9BB88D3D9620CFF00B2497B5774734B49AB6DA86CD6A9AA86402B
BFB474C8A17C6E6BCB6693129F6BDAFF0E046E8276661B105004E96E2ED1F23B
2A6DE8E21F133F0BD5A4E7905F9F22B9E4140C1CE1257A98352EB1B7F4737961
AB67BE1E090CC84256954D1EC1C8B8BF73FDA0EB85CBBC0DBA2FCD3918262169
6BD027A5F1E01CA2084655C84A86D94465B17BE968A3A7C341984D37098965E5
95D3A712DDE3759F82912ADC069744C616C8D4A503B33002F41E0D80C9011FAA
DC40BD09A2F871AF1BB2AA1FDCA4621E824A5077A9B6EC5B20F07115A86A6D8B
9EFC85214C16F461F140F5FF10F1D0A7F2F4FCC892273B468FFB1E486A62785D
C88DF0300CCBDD7B6715ABD5F63> |
12174 <001C60D8A8C9B5EE310DFF697C59C44EB39AD38AF8A15B08C449570C8
17F8008F9E38B9AD5816C10F8808FB04665961446E9E5997AED3103B2F7BAA5C
BEF5FE7269DD3515BB7CD146C0AE15841C29ADFAC878B2EF21CBF4B44C0A2AF8
BA149D25C83DCB855FC541C8FA47FDD430EB6DA9394DDEA84F96EFBC3781739D
18B18229E297CE5DF81BB1D7A885067A324BB1E48308754DE08E86CA3CCED610
4DF9A3B0DD710EF9BE98163EB0F31FB7F076FF86F82C2702725C10DC28F79618
85D7195A3E843B499978EE03DF4460EDBC113511EFE4EF01D7009010665B0B93
8E5D998CDAB47488ABF921DBB5258A336CE3A8C13A4CF1B76325D639B0706E15
8ED5BBA64B1332E4A0CE6569FF652751CA72A9C9F9D604D8A6287833968DDB68
3786C423B43912CAE77AED850A6316001803FC3D60354DF45136FC26FF952942
B8F6798AF97FB1D90416372E217A1EC1C3FB62C209FE18A> |
13567 <001C60D8A8C9B5EE31033B72102645F795EFDC0E471171AD4929AA979
D31BBFD0FCA669F8272B2291F64C0538D9FC1A185E229B7C7AC2538623D96CA1
FF47E79E734EBE7E9013EDA80F0F39FCAF22DE7E365AA2BE9FDA5EED5A2BDE58
2225B2A75FD79F63B5D1A7413358C60499DCA4172C207CBE3E6F7271DEC533FF
86428D8B18F094A24449328400A30108F86961E227F5052550975283F95FE0DF
A9E701CB4BBE0900837D2A072C12DCB38919ED443D12F0CF56EC95B2E9FB954D
23343F111813F340B6BC613CF83B05A3F219A2C9DD92373F4FBF274DD256A7D1
61F7032FF38D7341EEC3908006D1776C0501672F0DBF314CD58D928B871D8A5D
1070C4030923F4F2B885041044127AC44C4758FCF755B0E51266308437277D25
F553D8928FF8651AE08A0A85EF274870EF19B767E25439941073BED4A5909327
8C65992A4D99806B4> |
13697 <001C60D8A8C9B5EE31027CA2D4085EAC61ADE8F7BCBC48596F2C46EAF
DC07DEE6C6963FB0446C694D1D38DC89A5C1C5C5D1B9F93AD51761D1161F6537
F9549EEC8C30217F538F607BCE83C4EC2891EBBC280081AE660AEF644168F240
D6D838995E35DFB10F72A7E1B066936C4C4B8F5F27BD3FBD01783EE0FDB9485D
16EA8707DA409FB5924A06218E523F3F7C6CCF356042D1E431A5F7DF81E18FBA
B37E63FD915CA1FF85D00D0B79A961677CD4866C779577584A030E33C3CF42F4
04C0FAAE379158E14A5CA639BB744DED4E8D8EB061B15A6E2D9666AD060A92C8
09CB3EFFA969DE4E6F2D3FD30FCCC67DC0BD9852CFE2616619324D9E92EE22FC
AF664745171AB85B313E2DFB960E2CD57EABC5452E1B5CF5CAA520BE76406781
5A9C5176AB7A2DAFD3BE0A87E9193A5> |
13580 <001C60D8A8C9B5EE3102A9F7DB715D5656D1E3A4CDF72215DCD41377F
5A16CD1E22EE1708B4C6D7AFDCFDD1962F501C1A74ED1869686C07440EE34654
F19470E21E8CBB1D4C12294380ED886BB52070C8AEC1C74818C9330703A690C6
676669FC12BD3E69A1BB1728A6D3FF74B71E0E409FFC54EF64BC5E1A65EDC91C
D11B62A00B8AD3C15DBE085D7DF09547B9869FA431B352602DC0442CEE8A5421
276E2B62360ECF25740D30AEEB3C917EDCD2781840910A8054D5425267B51498
DE31BA4B73871076FA30E108AE452452830AC86D6E8433511315494A808ACDBA
DCFE65F1381C53141CCB07FAF8C2A260F3F4376420F15222C0A9B37E240A71F4
29311530D47B6469406935E773F578EBFA321C308285EA41F73E36AB46424AB5
838968D388615CB9BAA4543BA10471ADC8F3309DDC200B5740E7F8A88C773217
AF32B19D1D786DBBF603F4189EF3C4629896130F3AA9BE33C8B0FC8B101C8CA2
532621B76> |
5418 <001C60D8A8C9B5EE31023ADA669FB37D1DD638F510AE5E2A6FB82B26A8
5950375293140E99F14B506C08C4499ABDD89E4E7C717A9F0B29FC6CAB25960C
08C3A43B87ABCAD5F72535FF31AB2CB1249C0EC0438E1AADBCE44702455DF8CF
8BD5B80847ABC46D88DC181EA5F21C6CE298575CB2549D2B1EAD70DC8853928E
2E8F2006B7D116BEDC88515004AF4FF4D76BD7D65C804CBC5ACCF2B40F74C54E
9B52C57ECC562D91A9F3046F1271FCF5FDB75113F4F1FB22C7435BF8D24F93BA
743E804FB7BBE6BF291FE15ED48BB1FE2DBA93D6F540FB258A4A215568524FB0
9BF905FED9CB30CC88E4DA985D9E122840C42CEA088E3854FA52028A270C6D9B
57EF4A06596CA859F32A0228C210CE885CF6784422FDA76032EA74BDF9849324
B4A8C6E884F5A4A2E685142AC478B0B498ECC929F33204A5178A6AF78BCDD710
C629D9CFF91D13BC62B75E32642CD72C0E75D0E3182C0E4F2C31E6D5DC5DC817
CCDF7BBE16FBBEAA68D2B508FAA81632976BE0> |
8273 <001C60D8A8C9B5EE310D991F82D8FC606D8F35C5B69427E6274A939C88
D01B05A52977427C91BD6A5BEBE2445B8801FBB3FCD81F655E2E5857D5DA5143
DE9CFD2A0E26F3B18C58D69C8B3F74C372A08664AB91409804538EC27395A273
1BDA4BF0FDB7623D4A5DFAC59413573DE1C8E4F7FBA66E7B685D4749EDC6C763
219CC1B695B7B892CBE8D997B68D977A9E3305495D166899FDDBE133B6D8B8C3
CA7349493EF83B63FB2CF6034C28F457801C9B80B4C1A831021C19DB280A05D0
11FD4FC019EC4252ED6CF1FE4B012F36D93897490B17F11146664896938A65A2
D07E114950CB45F30C44FCD1F98B684D97E8BE4CDEBFDC5A1C6EB02FE63DC59A
8317A98320E8EF0648D06323935482296C485DA44754BBE4409280F89A675105
B6164E773F74D78DDB7D41B37F2780052AD651E9F0E7AC6647834E20A322BB80
DD7D6213D361C5AC329E343F0ECEC3DD659FABC8FC19461E5D1E5EA144A9C90C
9CFF73B00B3749099CFE747426547BB3DA005431CAE908DEB8DBB03B269BC49A
382560F84696092A5485685951257773B8638542A25F1C> |
7145 <001C60D8A8C9B5EE312335D7C969221AC803DA174B9721847824CB1FD2
C7F5A848E0CD4FDF4F52D5A6A9597592C695637BB90A7AD612266BACD723493D
861ABC74D2BF65D7F5DED0D565E546EEBF07C9A0B2DCD493D4990343D8886EAE
38BA6C26602A188F01C5C51D69C4F2140F730AE6748BED0B4583E06D41B02E65
B4ED5773DC712B00D05477B3D0003DDACABF3C71FF952071C17484B434186E2D
0CAA397E0484F411A4104A2A71F31C74F90A567FFE080FA0ECAF6A9AF36CD400
84235D063424> |
7800 <001C60D8A8C9B5EE31020331BA59686523A9329EA502B157D8D1215890
AD31D5A52056BDDFC61B8B15541E5DD20C325B350DCF9FFC28B6D393E14F5E6B
4756977DBBD7B576A65CB66695A25A160BB8420C506347CAA1A05801A133B4F2
D9457B1DB992F5C07E50DD1DC4776C7ED34D163B68D06E1315C883657C0874E6
7B2C516625DE806A728561EDAF31AB75F552D2955198DB442A1BC2188AE4BA2C
F3F853D8240090C8B4D4D56AAE4B9E9E275E2657C3B64C9902841469613DF6AA
17C597349A2A8240132B986955574DC648B23ABAEB3770B89335D2A1FE7136B9
356BB799567E2C0D888A2ABDFD747CA59A7CECE3508A0099FBC73F57A978EDEF
E20E0560BC924E17CE66A8B8C87EFCAB77229EBEF779E0EF8D8A849AA2EB784D
1DC76A5680B16D23447599C3C296AF4BC006BEE1A4037A59BE3AD6A51E3B7AA6
30A8371084F3034A6477C917BFD0C9457ABE9B8F55FDD1B6170418D02BB3AD66
4ED9B3A5988204E18771F56507BD7085B1104B028BA6DB8998A73E35063E2321
CE56AEB8B39E6346A8246A3740F793E357529C727EE22AB1> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /NLFCZI+SimSun-GBK-EUC-H-Identity-H /Identity-H 0 [/NLFCZI+SimSun-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
43.164 291.279 mo
(\015.\000\025\000\003\011\2470\037/\2164\3775\2015\014\025* Q\033\351\036x\000\003)
[15 5.99998 6 12 12 12 12 12 12 12 12 12 
12 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 16 GetGlyphDirectory
1958 <001C60D8A8C9B5EE310DF07F5585EE907FE0E932938E31A15B11953D35
3A500AE9D51160754C012F15820B8661C8DCB46D1C7F8DA5CAA3371C504A6073
61AB6657EFF4A6C5165DF34729E32B220E3AC48CD3AF102C673ED362BCF461EB
ED4F3CC1036454343BDDF72EA30AF5D31CB2342D971F5A826F3F71AC3C0B4B10
1D9FCDE9F32FB374D65D2994745AB1EE3DBEFB347CB2A5C582C472D3F0EFD454
A1AF51595B8B98BD0500560AA061CD1E88F80C89A87C0933B964F36E056D2810
B7F08C452F6C6D4823854A5155B17AA34AE778EAAAFD0B97F78F1565E9DC6843
910789814883EF8A918981422CE626B5> |
1117 <001C60D8A8C9B5EE31034A5B39E4F96F0DA48A2387B758E13D6CA9485E
429237D972557B42B4056A5929AA7EE480D92E39DDD70C2814B86F246AB6B28F
727DF58442C754D62355C2CF1424C60C1E9FC61105BBDAE2D4AD6037E38090D2
40E5C894806FDCB44BB223E28B77C14BC33DDB98085E6BB132AF32883BEA3220
970541D6089E674C41> |
712 <001C60D8A8C9B5EE310D16C9BDDE67CCF2E7F7F1335373641ADDC8E48C4
BD3315F1731506CF5A4DDDF48AFBFF21A2F093311B104EB9ED655AB55377118A
205E08BD91D637D4E86F85986ABE22223468E767986F984E65AFAAB61557FF77
75E69CE20D37AC884E85CCF331105C5C2FAF6A8> |
7784 <001C60D8A8C9B5EE3103FA77FCDBCDAEC43F36A83592DA71DBD08DBE2A
DDEBF8CC85CB369DA1361F8AFEAFC9DFE0BEC51DD3910FACB4E0EC6C4218B5A9
7D26E6FF879B53DF7A88362E85C12AF6E47B3A3791D8E4F138A8A5D195A0DB4D
FEA12A497FD6A8A8823C28BDD64D0C3DA607FBD8C41D733B12BF8B1B44B8BE66
0576C55356AC90FE6A2CF32BD8195F298EDAF6097813B4601FD1A432E3D26894
330C2496E323377A649E12EBA13FC9B2EBD967428A891B1CC8AAEEEC357EC5F9
ADC2BBD0F33A4FC98F8D0C213A680EBBF63E7A18E4F85151B1FAB52307B682E6
755D6F68E33551FC97B3B455A00A98E674F8CCF86B40B1D29754662E32E70DFC
FE4071C6FE72C60811268941F5E91BB4D4339E99AACB35144856AC1FB7A8562B
8EAEB3F178AFCE5EF83CF63C5D64FD62015952BE7712CD448D21EE3835674A91
B684EF83DBA2C31BD25D6EA41DCA644847749A0547116715A1F30F9B90ED508E
91346428858DD555D38CE45418F09C79E8998578D8EFD333D384991242727D67
061C44C6> |
5619 <001C60D8A8C9B5EE310207FBD32B5D8C9CE1AA5710D3761C0C0C8B3387
C049867961EE4DAE713BDA55672675DA46788658447FCC17E60DF3FBC02225CF
358E4DEC1E3F5A4F34F827951CB70EACECF3BAEEA3173F38659FBFE6A44B9F5E
8DDD55F2C8D033E67EDA094877ADCA4309CAA7D7A14244CEB6CAA1AEFE875EB9
72847E5F7D6380300BE29AE53AAC15AB865B5D9E211E6AE0652FD05C5EC604A9
9539D4775A79C63015E200CF26813EB3100109ADF93EAFE4F1D019B01E622E5D
2AD93201B0BB0B5BDFF79EE17863547ECCFDB475F70BFDF7E7976786B7B57FEA
85F4B22A8E1BA81665CA5EC18946B1DD16D0805B33309806721A> |
8597 <001C60D8A8C9B5EE310DBA038FA92E207AEF5240FE214217C4F7E273BC
7F56E3377CF943BC1837DB8BA58A8A8362190BE1C6EB96100F4081A375EFF171
7D96AA7B04BB222B59169AD5533FC7804E5990E2A8CCA4D5C0A5C5C836F2EA36
A882C2918D2D001C1776E13E100FB842B54769F688B812097409B07A2F785D33
653306E3F545716D816C10396B8221F238711FB47C050FEBA92DAEB2FB648E11
BB833BA6886CBDD3B41C8D2D5B575035AD66E84DA647A5187FAA179719305C7A
2692D4942849C6A2F04E326110A0110EF71A5DFDE7D9747DE092> |
20692 <001C60D8A8C9B5EE3102C0D66BE5D066F157B8711304AD4B878AA6025
EF45212ECF387BF7DA5633395DE0D693FA8D4D002411936FCDBE22643093082C
924088FD9A3734DC7BD0896F9F3C1ABA45F9306837FD890DD80BDFFA3E1175D2
192A527B27633A1039BF3D1832CC77B1216A5CBF95B459EBD981D04D062DA355
2BE1BC385D4A9EC948B7716EE6CAE1291649F0B26A96239832D6A309378F5B32
558A087CA69BD9E09551A8276C545FE9B91505F7909920CD3105B43AC1FFCF31
05851235823CF3ACCF913BB5EBE07ED18880DEC635B03220DD1C89988682117D
6486779452493329BD3985FD4E7D2CD2A57A71EDC0D799F4DE93A29662966DCF
92279E825557EF8FD451C976B4D929291B6DFC784DA0DCDF795C4F8C7CCCC6B1
E962D551F73C0561C4DBB64E988472BFA5D3E4D1885C6DCCC97B93C415C58587
7070DA606D9ED85BA52D453A732E84E9BEEFDBF74741053C17EFD288CDD89494
E19C203C5B5880BC2355E9F54AC579CDDFA1B3AEDA83C936D2ECBB92BEAD2873
8C676DBD7C7B5D66D8AF889947F8A4A614963DB4295447AE5B4FF08E6EF8208F
D995D7D6AED945ACB8978D591C7BA2DEED8E908D2483C601DEA2BBE18D49D728
0647C5027EC4F8A7F0D412652B09225E70625CF5335A556D955DA56946F8F69E
8BEF9E4C41F60B0FB43D0ED127330A98326BC6BF398F4765D71BA3C79B2AD77E
2874A5CBB39F4BBF9FD0ECEAD68674148E0E6107EA0AEF616E4EA441F2914667
2CBF0487C42B2EB690BB6922BD403D9BAF9B2656298> |
1130 <001C60D8A8C9B5EE310D43FFD5E0A1A71A417126F312CACD7ADC42CABA
A482E99397170BC00D21124C112E2512941C43945EC6E13C387CF4C12E23626C
35910CAAD9FF26B3C8A9332DE76C24A99BD75ABE93EACE5B0A048F517E91EC50
E5A9E6351359B4824881433A8024D3D5A8E9B53152C29EFE299D168FD64439AE
91596A83C692E52F15AE0A31EE6CD19DF28E8A02B03780A2709324089AA32E1D
40554B567681D913D34A1CBC77FBB5228543C636679548425B2AB3EAF9736799
5E0BB1107EDB45A1588497D83B706A4B933C2B499760B116700F272BD6581ED5
43D99BE30FEE36A58945906990A62F3CA48BA8B1B855D795AF7B> |
4649 <001C60D8A8C9B5EE3117D90B65A5F5982CB071F3902903F002B64072B4
894123B370B1BFFB6D31F5D85716E5106AE524A7EC75A2CD9CCFCFB8B2C5E2AB
7719B91D3854BB51D252873C7236B38B5DF0C30590C9C02AB0EE6B2409D0F3F9
F739FF0FA6CFBD9AE3F294547EC36DF55D83F5FD603B199F19A0952F1353141C
AAB89DAA8849B61E904F405D3BD59B1591678886F403F7801EDC8469C1CBF0E3
7C014DACCA8D8A4859F8334F74CF2BA6898E3F81849A398AACA1DA3DAE8215CC
76EBBD88B20B336D066E9E0CFF237D88580EB1D262BC0251E8EC5C76BCFF8727
1F27988A3FC32B43F6D9722C22D1D9578792D7D437CF556C37E03F1B44AA9CC8
3912DC92767BF4B2684CF71FC564504181D61ED1DEA8A80F6F2D> |
8703 <001C60D8A8C9B5EE310DBECCA4CFB6A5A04D3B7042F79C43BA0E20AF0E
82BB5F5C2B747D207F4B202DD4A1DC8EFE4BACD8EFA317AA50D84FBAD2CE9D48
CA3C0CA985A3E49351FD9508139626D56C41BC06F541A49A4EEECA2C146F6248
6BA82823471DB263C875399FBBC2FC0B5F06A2E0D4DFB779D4C4FC19A55ACD98
47E1F90E45FAE6E380D37EF29D419A39654F2F4E4E0C23FAA2BC2FC6AEB1C1D9
EE16ABC6BA70DC5A7827AE948092D1EFB5E918F774FAAFF9B28F27E52A378DE7
7871F38E6D1B1C3C0CF8285BD3F0544A202161F3FE2FC2E39B7060E9FA5C0379
04D5436696782973B5A359CF79860C0166AACC1AC65619F1BBB3CAE6700C9119
7E8CE02C9A2A500A33EFC5240CAA7C946850CEF89BAD3A7D0DC849F7F7810C5F
AD1D8FC7A9F7754D351CAE338961474981569BE4F249465CBD062DF078> |
12285 <001C60D8A8C9B5EE3103DB774E3374C8C43040F1493D41880DE6A1F88
3902C20FB17358BC336FAF66DBEDD7C1F4CE49D02190D6AFE0252DD6220D8885
9CCAE8C1A9BD86FB2214C3E8A42147BEF30BA4BD919D2A5A3C6E7A74B6893B48
1791FEDF5C9980EBCBDA931F57A32E6D8806BAA7F032333D25D76694E06457F0
21E3424C0A131FBAFC24E78535EAB52E710619CB152A0097494C8319C05E5976
1D1D60D92407A45613B7FFAF39D986ADED19C800E99B20266C8C9D9930B736B0
7A0439CCC3B3ED2F29F819716A540014CD9FF7384794876245C48B6A14B471B6
AE382D92A4836F47CA7D45C391698D26FE02DB933CDDE2A5F5D352226F53CB2A
C2B2D693B97DBAA7441C5A1C46CAAB80F5C0E47E7C0813F57F3D6713F24998D0
7EEA191C80C6F2B> |
4722 <001C60D8A8C9B5EE310DF4479E8CCE34655876EEDBEC477294991D20B3
1B7B0DC0120DB59FCF27A018392223886704D2CFA66772253458C53B1B1529F5
F2FB0089F587D0B2943405AE8BF5AEE25D8A37B9D4FD1EC8B5129F40867CCD15
ACD1C1F0FEAEA499C7E4499F5AB7269140028366D314596E71840595C4AC09DA
B32602757ADA07FE994B5E75A9B149C3A8D844A6D3D702ED129E7C4565E73361
04C2D26E3893AF49F473CCA093C13CE0F3C062BDD0002676C905A79858FD72E5
7B317D5CE3086038E909E126A41CA4B4401980E371A8D88601A3A766819F1D5D
DF1496D51AB805B6692C03EEB6433345D67F7C71F94C2253D20274C41DEFA7C7
B5F5EBDCB6FB80ED410CE61CE04CA7F813F28C1AC22C> |
8529 <001C60D8A8C9B5EE310366CF5534DA3201A7EAC334683B301499ED3533
02F3833A7FF686999F1B89CCC6749CA9510BB994DECC147BA2CCD55839D21342
3B294A93FB79225DC5CA1DF6B53A54875F434A6D6D24DF328D74588F805BBEE7
2F947A1691644C6AF642228EBC89BAFD623FB78416CFB1B475F872F83D4AE1A2
C76A69621DFAEA83E2D5A1F791B11B9B14485B69AC69BE7E19792B20655585CF
A2B0F2C6B99C15F4E2FAC561585128C13BD32A21E6E8C885F4FE416115C5E396
A621EDA85795CFF4AF12B670D9FCD3221E9DC2BEE75101DD9B0909ED6F074A1A
6182313A240BE96E1B23ED29314E17880485152E26CD7C3B3365C54E4076A8D7
2EAA1973D1B114E4F883574FD871DC5F3CF799EB414C237E78915F523B8CBE36
031AEF0A1A2AAEEB2A220B3754539CB75F40615EFCD5E5EBC54F2D724D11044C
10EAD410854834F3B4E3B3> |
7604 <001C60D8A8C9B5EE310323C8BB51E304D135DBC4FF6642CDA047A20EBE
9F307C88E2AA7CFACA372A14E54037A6E112F160037CCE3181002EFB8497E218
62CB89CEA2FAA23A8593D29CD684825C56F8037085F258645A864E7584894017
BC12E303B1D1A58E175A1B36B68BF3FDEE4E65A0792C6E7D9F82D46F9309C774
D4BC933F6DC6D384A12045F0023293A8616BAA5BA9CE016C831929712C4063D7
2E46B631C8C20A2346916C17BC51A3EE657EBB80CD78B1CE06B87BA7256059C4
955B19F18DE4BE714B5175577616611F496A3E718AEDD8C1B1901D1A33D63CFA
71F1FDC3220018912C4F6190A0FC4523BB98A0C91F284B36F3F1D1AA28155CF5
BD36115248732D1224D7D8833891BC66AB1B7390FC0988661A26DB84B1965237
C355E536243B1ABCFBEDF6BD1EEFBE42E127859E8E1307CDA813FB1E26C51156
DF84D83216ADA3CF4B8900C83765C8FABFE4D5D42428602800CE29243245239E
9C178F04> |
18000 <001C60D8A8C9B5EE310375B8245822B311E5631CE94DD949157C7EA9A
223DD63A128C6DA2EA7C19DA74DF48C1263590DF933C21F045FD3E76EF7B9005
4E561C35998B7188B307D359F0C1AFC639DC8B905AD8544A759BE014D0E3596E
F114758C30E252B9610314110BDF6B373589D7F597B1A1C64DCA248866093ADD
CB14262A3E2E6A388A2DF49985CB33BA17479C48931107B56C189F96EBA30ACC
6CA73F78215AFA5B620B52159FCF3C13D76D684D3D7CF0EB19307A1FF7AD8CCE
635F1AE1032ADFB029C306B063650B46E614298FCDF6D5F95781C9DD3C043817
0D9E30430B1F1D5797683471E9C2971A3D9C722D761DBD1B29D1EFA4D4926F8C
1108DF6AF13C5EB6D3DBAD74E069CADDFE7B48C560A187ED714239426230D964
247CBCF05ACE8B7E642C1ADA10235110B318BDA8ECE28E49374B699573298737
80253E8763260EEA865F9AB7F22D945725A1D546A76E7F560DD5284BCFD76AE6
831> |
12539 <001C60D8A8C9B5EE310213563A27429249DD322E88500D59A43E70F69
6D9813C13DE31DD6E0EF9EE28CE1B318476563E517DA8DD0FAD92CE6C4ADF409
2DA08E862616431CF5F6D0955A97D8D898E5C9C3B690647C991C6903895C3205
4432D1A62551B956D51320A9AC44284B182248A9B4F61705A90B66070FF0CF4E
7BBE615EA7A0A4BB81A796E80B96DB9D3BC89DDF78E48F14CD9056F0B143FA8C
2DB547E8960957A78D758CEF4A6914D311CEE433ECA589AAD71ABD9CBA3CEA3B
3DDCC> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-78.516 313.299 mo
(\007\246\004]\002\310\036h\025\363!\225P\324\004j\022\)!\377/\375\022r!Q\035\264FP\025*0\373)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HIBBAA+TimesNewRomanPSMT)
%%Title: (HIBBAA+TimesNewRomanPSMT Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HIBBAA+TimesNewRomanPSMT def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-568 -307 2046 1040} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 4685 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB
222483BD74F8B> |
48 <001C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA
3A35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242
AA7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A
83BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96E
CA4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF
30A9F16E8C6EE80DDA09053247> |
54 <001C60D8A8C9B7EF32243DA21D5631D8766D74D715030BA7905332A0CFAC
49387DB487F69FE973B04989A1F5B84226AC0574A3AC8A92A20A67AC6A93CF1F
8D7D050DEAAE8CF31B4A5FB504F0A0814E8C9022E7C7EFFB00070B62EB780F5B
FD7AC1407620155D4B738E953EA9E8519FCB3635DEED6C82D9AB968BE1131CEE
B6B072A246B745E2E47F0890CD4A4DD5061C30741173A5782D0F5AE0E6453375
18CA765AC1ABF9ABB13F9D6F8666630C08F558B2481DB7C0FEA08930FF35DE90
4907DBC222EF06C7863FAB3917A57116C566327E1977A70091D7628A2440BE3A
B444BD01341C54F829742469A9B1CF3048C0B204E355F432B93B12EA12C84F80
CE13D22435E5FCC1B5A000DE> |
57 <001C60D8A8C9B6079F6D060A2FEA7FC1569E0C14DA541DD91C00EBC3777B
DE67491C2EA2113C451959D17D324EE8DBB436A0F30BF65402B93EFD32E095FD
4A5BC20760673D3864924C1ACF695D3BD682644F24B440E38C1FF24D4CC16712
B502AE5F89EDD273AE3A1DBED84FBFBD9B8AF85ACA697ED4658DA6CFEAC07815
4F7D9BB4AB2053> |
47 <001C60D8A8C9B7D8BE1910D0EBEC744B6638E6ED4C6FC0AF39F5B8B10BFA
09270956A997B577BBD8E3EC179B174ED931484CCFFCF819D4978AE37145A7A3
C221DF78A5AAD08DFCBE2638BCFCF6B4930FFFAD1163890B85697ECB905727AF
12A0E5C1679B01834AD8D0C4111313E17E548887938F4F64DA1DB39BD7CD6874
8B847D2C24AD687E0CDB56> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HIBBAA+TimesNewRomanPSMT-Identity-H /Identity-H 0 [/HIBBAA+TimesNewRomanPSMT] ct_ComposeFont pop end end
%ADOEndSubsetFont
/NLFCZJ+TimesNewRomanPSMT /HIBBAA+TimesNewRomanPSMT-Identity-H findfont ct_VMDictPut
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
129.984 313.299 mo
(\0000\0006\0009\000/)
[10.6837 6.68756 8.67957 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 8 GetGlyphDirectory
4480 <001C60D8A8C9B5EE310D507BE4913433F7D2C79A4EDBBD826C92DC6D19
45084DE348D040B57A0350548A6FA82FB37E0E5FFD34DE2CBC136EF2C1B12777
CF7ECC52D327BD9095977CB84F25934BEEE69C8F6BEB8E3551865A41ECCBB6D1
31C533D153B9E9174BF78CF229D129A028BF3E63D216FBC3582CE9F51E37DC75
C1826ECF997B8D6B7A1940> |
3515 <001C60D8A8C9B5EE310250288C1C6F6A69B2731737A9B23946AEC5233A
801EB2C5909A5919B48208B8D8388D1B961EA304687C305C7AB916EE17125871
C6891DD1E5391693BB9CA5D6D7D748962E76572C4F9C1871C498D4A3D9ED551A
49F74AF4515410DB4B324756E4232CCA02813D944CA0B9809B5F7E53C09B20FA
E7C12C78E095E2550538AC3BB15B200CEE219FBAB31D293B1F9493B8067FCA1C
EBD8BE885AE1174E8801FF69A40FAD7F4CE306AC1C75A05FF1A134E423720DD5
B14E8BDF3A0E13C60AF519485877754B98A249D0F0A4B8112AC28A2D97A06FF0
F96ED4C980C7A49BA4D70DE25DA6862C04C4E84A8AF71747408805559BE683A4
163E2D8E83585A53D2078BFE667C6D0C88B0DC6388775478AC771780685EAE8D
03> |
2357 <001C60D8A8C9B5EE310D7591D869FF9527001B0E3CCDFA3905199639DF
6509838F3D6043C938AA9DCAF89B0143E2E223849819648211460C6E08D1EE23
F145488FF37D4388B06472505F9F31FDC58FC483826D8F792F87FD1C08BF639A
9C0865217025D259DAD70B16562302DD378618AFA8BD04213B33A7611C2096EE
12421B96B7F4D117A95303E7C79A6F8549178EAB9AA35A29769A6E91CB557679
BFB20C3EA572CBC19AA7269E33DEBD8193154610DE3BDD16809605CB82F687AD
6C7C3D0306B545B56F77C56CF74CD8D2F06C1B68EA7686B232CEC0240EBBF033
18A4DACD22276C35D82F1E0437E70A7608C0189499228780102173A100691EB0
236DA8D17A75C7028E5B035F28A1999EF278> |
6428 <001C60D8A8C9B5EE3100820B2B2468470E140421B81F7BC95A3211B8A6
D3E820576446D1B89E056BCDF50AB36FD1709E79CE3421080671638A86521293
43832C8766965509DA52B16EEE7EA36DA6D648A325C8F82AF6C51F937A159DB6
050DCD8A74AB63A9E65486EBFC8FB7B9A4AB054D19FB2B1C913036B2454370E4
CEBE50C9D5901994ABE55F006DCB03350825D9515E12C5E3E9BF836D8EB9269F
E8884A9A6166DD1EAAF4137BE41C7D132A1DAC168FF93E21200D1C67F3F58210
00FF90C7AD064CD79541D7984A8133BC9D19642AC2754C191AC53DAFBFD351A3
198376ADEBAD5A23688F2559A52C6EFA7631336385C61534EB4C9EE2CCF5300B
330CD87406BDEE0C96CF41B6BFB5> |
7072 <001C60D8A8C9B5EE31020F8211AF203B409BE69AC0B68B446FD4EE9ED1
4721CF2A9A21B88FDA7D8E37AAC73F35FE4084653B0B95E319EB8703812C2A0C
108D9092AFC18B1940DD2ED6AF36C6F1B98EEE247BC4A963065CFE72FB103B46
B523DBD7E07735C163D7413F2644CC28C6F92F85D0B39EA0D65AF3B4E4B78F55
D6FC49CE4D92F27CEEAC3024668CF3462A4AA4E8573702C758E552BCBE8F0414
EB253C2B7733024541CAE5388922865026D9C7E8A9ACD0C992348DD3F8D4CBC6
0622E7F2161951BFF34079ED8A8E67A25A5F1E11988BE535306FD2CA77DD87D4
D01BE4CA3ECDB0FCD161FE2ECFD9293096DBD24EE4C0F004279A015A08EF5EA4
45F0121066CDD05C304BDE9236870555C977C75D4739DBB42868E680B64AA37B
AE2401958310E87EA4454855BF081799704840DF55FF247D5DC9A48274AB8C60
835B6E7E86EDB425F69F049E974A425D9839A7D556A7244FCF74B36520B3DEC0
C69225DD2EDA65064DE6D781BE0E52E6019E6CD07C93F97A3C40589A375F23EF
61599F097FDD1C00369B8831B391879B210A664175977AE6DF10243B958940CA
DC480B0DCF74760E5300BFB15AA118D97F29E6AFBA54EF39A4F382CE16DE5FC0
7DBA65943CF9E0383993316CFAEC6C9728F1341EE3C4CA8305EF8D7085C3EF7B
9983E5692DB195A932D80484D2890D19> |
6558 <001C60D8A8C9B5EE3102820CDF2059AE7E38A7DD18C49A35420DB1B091
122739BEE0A32333A53DA02BFB714548CF1E0E1DF60B241A30D0E145F324C703
AE6BA40AE7367E8F21EA0F895A1A694E0B1E2B95885487CB92CFDEC1E2ED11BD
F2A7DBB72F5444265C5E8CDEA08DFED3052C81B6BBB72AF4591784C70BE7200D
1AB7ED97BE9C64CF192F912D7354C4FC588801B4F164B79208B016F221435034
0368B5CEF714699166C38AC42E0CCA0FA1C090F3438CA38CFF62B62408B0FC66
1CED7047AA4C28E7CE51EF328B4A242D039B9E86CFF81B0EDB18BD659F822BAB
9AB06551093EE0FE1EFA44BE7E8A9488CA8FC87D41DC769F16898A16C300C034
E8999E3F32045143E4882EF8548B1BC02A3DF2D6FD591734B19E9905316166B0
88D1AE54C0DEDAFC3AE73A2E8B291D796FF1536C4768D97BC0D916F0190CF71C
0C> |
13571 <001C60D8A8C9B5EE31021BDB61D6B8606F0DE405C36E945A5FA8D796B
524802D8A464C6706247BB218E0F1493C00075429D9DA1762D7C766CB8D2784C
B3EA1C0AB76E95E789440FD39CB314A1A8DFBDEA9482B1563231EADFEA13AD24
F1F7B1DA44E6B6EB936D6418CA9AF4A27315FEF83EB752589E406403290872A3
EFF93AA7610526778F3660720C31AEE705B223A82BAE28746543B3D0F2EC882A
F7B24FE2F169DD137B414CC90CE6379D41F0599DFE1FBF2B865521360A008EC7
B23C2B585B5926BCDA96BFA51BFF2A77A3C895AC7773D0FC8E37683AD8C9D195
C90CA212BEBC7FC473B83BD8C8BF6BEC36015402F6C40B734397D5C180F705E3
30AFAA106A5BFAA556A0F57A2EDEDED41D02D8B97781BFE508104ED2E2288022
4643CAB309FA58233E4FC818D03027B> |
2748 <001C60D8A8C9B5EE3102400FFBBE09DC2B89AA5B4FAEE607CE0358153F
0A329569EB85A33BFD07CBC4E8349883EDAC4DDDC24275ADAB2BEA39FF0B7BD3
0C79B5B47716583EF51683AA22898ED2D72DF15D4099A8849BEBDC4EDFCB0F2F
019AFC4F69E16E5BE312F770D62BC875C60170341C0462D34C749CD687DAE068
9E7EA71BE5459B1A54B565DA92C7EA84C816AA717F093D28B7110FA9C8C8B370
03A0CD2AE8D83B70B49A5349E37354C88B6C1BF867D768AA0DEC7758577EB0F4
82B188E4B0BAEF5C7678FD87356015387E07B1D00DD66523E10A4EB444235C86
7629E1AC655EBB1571C8ADA6A0479B7EE788366303CDB17A00> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
167.844 313.299 mo
(\021\200 Q\015\273\002\310\0115\031\034\022\)\033\240\031\2365\003\035\264\012\274)
[12.0048 12.0048 12.0048 12.0048 12.0048 12.0048 12.0048 12.0048 12.0048 12.0048 12.0048 0 
]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 10 GetGlyphDirectory
17920 <001C60D8A8C9B5EE310207FB7A6F6EF4E1B595511ADF1AAEECED6D649
45E3FD8287E54C136B19BD636A8DDC7BB93F41F3CBECEE20234189916D32D785
97DDD038EA2A6995693EC2EE3C4EF5177B94CF65041CEC833B378D930EDB795B
B8FD7752D9C49BD689DB0749029F2E56C75B9F387BDD97FDB2E3762266745A15
4813DEBA7ECD13E0599E1EF9A5725187493072F115D630284C256A260B1BBF5A
7B413066B6CC472FBF9CD16DE73A5FED028DC44390F4196EFB6998A399100163
C8E649DF75AD09095266A0F22ADA4822B394EF14C3DE860315C5AC4A1B436A8D
81948F4821EB0C509E3DA804FC286B00F627126B3B48E08C68EF291D2ED295B7
EA54401486101FF596807508D98C50D85633C1B7370ED2DD0E40B4D847586252
AB61358FE62DF4039B36EEFAF98E10B0F210421DD1B3595690AF61B1C5B6EA2D
70E0014E78E247FA885BBC7413CD10B605A2C6AFA1F464AF889F657DA260D> |
12743 <001C60D8A8C9B5EE3102DB03B5ABD3CD1923494E26F25E48AFC4A8961
7691FA0D291005753A84EE94525734F1F94E51AF8D4C273FE9A856AA082C387B
751362579EBBC7390E3EEEC9BD29FE2A565C40E5EBCA52BD9D507E987F25440E
7E92EB26BD83FA9963CDA9E4861915A1841E2CC024A25682F20FB2A82D86DB41
88D79BED3CD9B5BA6BE11F8658C69FB50B2F9E26A1C2C7E056312F39B9D85AC9
B164E975D88B6749CD3B740A970D1BE882C1E4BB8B49032F8F4058C0F0305A88
969D88E7E59BD4A1D0F29BACB40CEFADCA8E72F578007180DA29516AA2A54E02
0941A494D4B642FAD11F008FEB022DB7F8B1B92DDBF1DCA61291508EC1B6504F
8B863DF89B0FB8BD19143BB20F2BB72BAEC8D1DC3B3AFD6FD59243AEC6AA3B9B
BB05D1A6E4C51061AB278B30E0455E11C19374D7ECE86959BE21CCF416ED797E
AEF30F1E1AD29CDA360D91826BEB7FE01F3005DD1F98003D41BD9FB5FE9329E6
8A84C9698B32B9349AC53E886DC09CF0C63A9B6C8AEBFBEB1F129E26B442ABAF
6E9818763A1C247BF54C2382644F17555AE899B93929592F9A1F2931FCF0001A
790980F4553A7879E2ED4ADB9883BDB64> |
15996 <001C60D8A8C9B5EE3102400124CE24B004E3F96C7DD3FC6A744970C5A
F4546F775217C4326090C24A191170F8E9A39C9FCE336FB33F87D1CAEF8FFB76
BEE68B02036E5803DE4B4312BADE954B3C87DD12273D20ED94103A75FE55D87F
FDEC6F60834900C78E693FF519EADA857D90080A764CE815F818D5E081585B75
B8CD927697536739964F6CE02B786DE0C016D0F6BDE5DBA04F24F79C6BD742FC
E1D77D5722472B3AD123B0A9C68345AF46F09DE7050B40F61F9D5355CE4CB1A2
46D72D3FA31E51565> |
11444 <001C60D8A8C9B5EE31023EA36A9FB9EE2C219ABE16AF6E98A7F367D70
9BAB068D02B24D63340F410693C034CF5BBBECA200710170958DB600C4C999E1
05001B2BFA4B7A0F55B3CFDCB20B02C5CDEDD0BD3D4822ACB3C3A6B0A316685D
8CF51742A5A3B0B5BB01743954FFEA07DB62AA948E8DCB0F399F3F0050E67826
2C930A2EEFFA173A3D4063CF42CBD1C9336168A104098AE2979E5954AA83057D
8E7C62401CC0D869A5A63418A5F009EF25398270F31F2C3873A5BC2C86AE252C
75C00D85F58E879895BE629E8544187805AE2CA1D3CD18A971146FBE5CDB0E2B
501F80384737F37603FAC267E78D12AD3DC7638CE9AFD4B6136A9E3C02C60362
BCBDA6F8CAD317A3180BDE6BEB563209B4F7E6CBFB4F8> |
452 <001C60D8A8C9B5EE310D8487AE9E50554812AD8F12B105E9532874344ED
6989280DBAB739DAEC25DD55D89E4DA5E7F4D33FC9A4AB0E0CCA2FD3704676FE
9221649CB7D1162176C22CD00245DF2C968C974B57DA688AE984584148B7CCDE
8B61CD3ABA7CC4B0487B8B754A98BBDC4D2EC67904EB430BA9182FA4C4AD775E
3BB184F7533440CE18359691D193D47560E1F4C52CDF8393F16CB7E> |
1072 <001C60D8A8C9B5EE311F6B2C8C987F238EF28D232EDB52D11ED50A38F9
48F93F5590> |
19858 <001C60D8A8C9B5EE3102E7562DE9390CDE6839B17FDEE01E757338444
56D5AD0D9D3E74BADBEB28C73F9976D6E984E0D82FFB285A6E3EED8D4CECFF9B
274C3EE9B1BBC21B8116CACA97A9F413E2FD09240CA8E8FA166E77224EC0955A
573727E2F6465757D06217DFD7D895119CB2458829E844EDB51A5237FE6DE7C6
82B018A31DBC650290C91F13912FD605A09CBE8793083A4E267F8059A8A00DDD
11656CDCB8E9CAA24D17515F169F803AEE7467E111F8450F49CAC8B8B> |
2612 <001C60D8A8C9B5EE3103C3CC7385558884B691450491C15969A5803D69
CA199D9B1F4CD512B1C00F340CB0584F3639D6753F002A78716C82E4780B2C22
33D0574C8B538DE626C4A1F23C98E921FC4D88432085D5D142C49A65C21A5684
1709B623781404103AD6A1EBE524B7BC828C3B825EB2130350E52809461C033F
4C1D451A81C129AF7F244A4A6BEBA56B9DC37AB08979694A69F9FE5CB342D785
D8C605AE11B5F1B13D20250A5B586A4C5E841B1C36066417587786F7955E208A
E4EFA759C2111DF60D40C93EAB8411BB82B87E5199B44539D49F62E2D43C7A89
0A6BD80D2930907C7943> |
2591 <001C60D8A8C9B5EE3127FF767AC7A8446C8CF7F14221E81A8554D9BD82
80A0C86365BE4CEFC1AD965DA82B9E0857F443563A0ADCBC5F1396FA8DDF2BB8
4B5EF91A445A7828F4841D4F7226FDC462F00A1CDD509D200C77D24A05133175
FF248BD64002BA131F187261C43EEB5D93397824E1CDEF8C8EA89E491C94DA88
D1EF57D184978B397EDD6F808F6795D74F8B> |
11105 <001C60D8A8C9B5EE310352E176CF66984C02A198373F8BCBC7856E32C
14762FB7F9046BD047A1A745CAF4C6C82620B8F87CB97A4B6E9E81681FF45E06
27EE1694A51EA900856799CD124680224A25B74F6AB8A95BE4AE779923C99999
5BFD808C264CCD8A10BF5095001CABCA839DF18C910854DEEA611BDB4139BB9F
1562FD88FE8B96248CD045B82B705DE57ACA9AA5D86> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-102.036 335.259 mo
(F\0001\307>|\004j,\264\025* Q\001\304\0040\033\351M\222\002\310\0124\022r!Q,\264\033\240\031\2365\003\035\264\012\037+a)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
166.224 335.259 mo
(\0000\0006\0009\000/)
[10.6837 6.68756 8.67957 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 7 GetGlyphDirectory
3901 <001C60D8A8C9B5EE3103A4CDFB6F4F484EF0920BDC1989B88D9F7B7F27
117B61A9670B2A2DF4D2FF53F18F01E6D5FB4C62465A966B5B59A2A09C946626
9EFD3CD090500D4D9B13B10F754D35B93501A0FE68D683742FC2ABAFB39EFC63
014F7BBAA9DB49BEEC46AAB1CB6A268C332D4592652514D142743BF413DAAB00
30D4583C94FDCEAA824F7B9E1600C75C9182BB082108D6F48912C648B78EF545
694878511576600EFE507A04D3F08A350A9FAF2BF82A56714B36105512879529
F4E442059F9847C6FB8B9086A84B1EF33BE562DE84386E61BFD97ECBCCA294BA
F3ABB03BA12F2E36DEBA5833090F7EF39FC1238D1F0CA53DDCEF275CCE62BD6C
860AB1C086E11BB6EB0AFAC54969A10C> |
2616 <001C60D8A8C9B5EE31024001D815B60DC67152D0F57B9C6F5B20609B04
2B4C4E4C201520C89F9912B07852978F93DCC5E9DA9EC680C8B2904DD4DA3415
72D388D4D82869F16C51641275756414ED4E10805FA8384BD5C2EB48ED2D9FD9
3E73A2EFC9F9AB02CA2A7A789F5C305CC780885B3FE2B680B466F25ED69ECDFE
B88A0812ECB02A2015D0BE84547ED8DFE3F4330325571B96DB4DB1E4FA1D18A1
D53C466C7B6F18499F42FA4968817260A3FB51466B6A275D6F> |
12971 <001C60D8A8C9B5EE310DDF280EDBE96C98BCD8FB074102B8AB635CE8A
5A664F480E70F67BA43922B0EFFB2099BF504575145DDBEDDB00670F3248AEFD
1AF9CBD195D76091AB645C52362F1F2BFF5EA162EACD9608A71DA0217931005C
9FAA1BFE793A88923C1586F231F1C5A9D17BBDA3F4CD9AB96AFBC72C63EE53BB
147B54B144F2A4BE6F4F1E404E7C76A12E9A1C804A7A4C2B49D3AABD0B77DB50
B50E329ABBBAECFAF4CA982C4DAA6903BE1B11482E5AC9AE84E0F30C82BB1678
DD1307A98AC6DE87E251E644871F89A23445B3DE520F87B36FF9DA0151487831
4713355FC0D4FB57F5A8AA2BD1018BD605D3622D51F6897BDD2F21E538576427
3B1135EEF49393572881037B4ED3B06075A5C82ED92B92280C36E16BF3463637
86B706FCBF2D5D6C53FD18C58F343D5EAA96B2D1D7BCD92846E75F370B10208B
5E3A8143B8B04725474C3929637C34E9C18E21B20BADEAB5A79C0D93FE5CAD2B
E25988634308F> |
7573 <001C60D8A8C9B5EE31029615090294B8EC66045C3699F6BF458FA9B417
A00432B37A00241FB9AA9F92B208E55E01D8267A4849C9513C8A9522F1F054BA
7C2BC999659D0D0A7C216E794D79E1FFA6642ADB39A48D3ED92BD9AB05A890E3
88639E0C0F677382B20A6F6AB6A211C5F14A751056632029E9235AAA9FA1A749
7A81648C56023FEDD468D42E19B2A78B1FAB72A9947BFAFA30B67080067C4A1A
0F866DAE55C5BC5B88B38C08B9D562251FBD5D55CACEBF550BCA0E025F30A94B
FC9A84EFC3FB71876AFB42EB2400403FE787215AAC8DFA32E2D1580C52D37CFC
1CDADF305ACFE7D92F6A2B560F4D4882> |
2155 <001C60D8A8C9B5EE31023EA35B675AC2AF1407A13843F5A0C078A4B95F
CC0D462A257017D20E85748E6637A83A8E6C9F878FE5D1E441A096B34BA2199D
6DAE5EE6C2183EB558312FBD283E00574243A515E6FD807A77D8CA8FF9050B0C
8CC4D2C099FE97151BE14B79406CE2A43071BC2344BC06C3F2C4F880D12B2C51
07491549AB3344A7DE2A94B8E4247B5361C811C2697F468D73F5DA90083BCB4B
34E0AB65A0BAC3E1E05302B3D0E145AFC45B6E015F36432487E14F53D0E28852
21491644BF869AB2AF96368DF8BD3636C1BDBA83057C55B29142899F4668C68F
1B84E0CC1204E8D601A13C5ECED6CF871266716F1BC1D51ABB77AE5D1F2B5A6A
D13CBD7C47022D45123B881A9F2B42130111D64D593B4915656F1D07B5E3F5B2
C8101ADCCDA7ADC4377C2BF70EF10C584F92190190B533A4B2F7A228445E1F17
959B2A4744BD897707F4EF0F6555BBA1AF94304A7454> |
11115 <001C60D8A8C9B5EE310D4F11BE4C2DF3DDF9F06A630A23F8FDD8D757E
5991A5AABCD0D5503866AC9B3E54CB686379CCC73D357D034F47D9ED4A5270E6
96EF053C6DCF23AEF9AFAFEC725FE407434780C803EC7207FE5242354DA6EEAE
C05F2EA8FC11A7C919137ADAB1C2A75F24E8A9A7DE4615641B1017B39923E620
45C9A8ABCAF0BA77DEFF174C87C83B73B28B8A931F1CE697F1DA9F8C377B07C6
35FC0DCD67EEA5D3181A92970644514733009E2FFF5031375F5815384EAFB1A7
AB2F1A2FCD0E89B40E461449B1773DC660621AA> |
1467 <001C60D8A8C9B5EE3103E3FAF30909B1D060E2848695A16CCA9A5770E3
0E853C6AEF57A03EA7F47C0EF84E7BD8C803ED4683641CA2736AE4F99D7686B5
81A1664BC26CEF69B35A9B076B9DF21F214BA90AEFC7B25B799F54916BEF2503
3A2DC29B1686747F58379E42137F7E9275691F5F6A7E5FF6D5695FC5B0CEAB63
71E472BACB281F4A510A5F562458E6A06E6C5C7D8892040CA191380B8E1353C0
57B23994618AF7922EC61B38CD84C48F01ECC6891D6F0E8F4D512F9636E231F3
B1515E66FE3ACAF1D8E0A366AB32F83A061765FA717B3E23FB7F2FE5DA66E75E
7B382758F35D35AF36EBEB7719BB933AC1E257139BF75FE51C20D751B2E9ECD3
D1C596BA8BDA10F967D78EB75E3B8A08FAF527069219DC70E1890EA9E7BBFADD
607886ED575B573232374F68A571155C03F4C64824B638A38B6B7441BC4A6D2E
FD4D73C80C0AF54861AFA5521DBF8D69> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
203.844 335.259 mo
(\017=\01282\253\015\273\035\225\010k+k\001\304\005\273)sh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 5 GetGlyphDirectory
4018 <001C60D8A8C9B5EE310087FC1515D764254E02BB59508118FD0E251BAD
97C041D0F794AC2D8ADC2345E5F99AC0E29852057F2CBF432A48542A63EF93DF
52EC6720A51906D9EFB399C544165FCDF0EEDBCD75A0F1F17164F1A205151F57
041A0FCADAE27473145BC440DD0382B0509F8DEFCDC5C02AE398A326F9B6C70A
8DB1009DDDC1DF0AF71A2F08530924844783AE142CC3C24650338CD86B8E5509
F62F8B39F594CF60EC761BF5DC8F195B91F5DDE5FC06B51E9A9E33F3B8C541C4
8BC1C8EA9F5A8D727551BC4AC9382CD596B1AF486BAED6404ACC430CDD767804
0279848663641BBAA42E47DF1B13C6B01FC4E17CD3C57F5A> |
5522 <001C60D8A8C9B5EE3103A8963ECFDCBE576E16941A4CF9CC084AE13E41
8E0C853F9DE91B09BED64005A5E0332570432495CE96F0D8B178E5EB649470EB
F2B9905CF8C574DBF7466F252B2DB59EC2ECA11203D384E1ED8DA679C081414D
21CB67C56AE7C1F9EB952C698A412E24A5E2147BDEA8C791F9C1D29F16718264
15EA871D64707D755CEE50B2EA83C0E9A90B1AD15813CEE57C6D82FDF4E5489C
A2047656D68A6A9EFAA608FBEBFA9C555BDBB760F7070FDCBFF65533A53AD14C
75416D7EDA29A35F43C9A01CA6211339C8C55ECAA1C62FAA2D1ECB2BA5B3147F
8C6C8EFABAB088A1344127887C963D42F6F7FBE05155148E17D6774E4E80D9F3
4DF869D7> |
5439 <001C60D8A8C9B5EE310DE3F256B236D7C6DE7317F66DA911DCD3686CCB
475D9BCA2484AD98BD874BDB8E0FEFD14851791556AFF9D3093337DF9C1BF2C6
CE2F6B320336793DFD86B336C0D20EC8627D042813D373824BE707181002601D
7DCDE0154FD68EB1E62F6F26A7B02C98EBB9F1FC77C42D948674E39BF8E86C6A
2BA9F80DB24482EC0529A5BBEBCB67D5E9852ECE32070876099909F8E3C76480
0283E28AB0F615CC8A9FE0A0F5ACDFE6855F6FD8B86B4285353DBEC121B7B0EF
87AA4DA0993EFCA661A4CB5A1CE193372D7F00BDF4FA48588E44AAC9E497FC31
872A789E69EB473C86F23E23DEA44CF8B3BA8E360DBF3A5E71F8EA6A1B67953E
E4E4> |
2374 <001C60D8A8C9B5EE310DA69676F676D079D4C6CB2A0CF3DBD475451DDC
6D7E620CA2418C8326D4B95370DB6A5EDA53E839183A9F64A852F611C5B64C93
89D8E0FF652900A37DED655AD757D5810FCAF59F036A4371C60E1480F9C9121A
40B41D08C8C51C296C1A78C1771513EFAA29D1D4E28B84774516FA161D823D6E
D1806FFD09B8ABE4B179A20D69E55D5770925D5757B4F3643A9742CB072DE62B
258357AC346BE93C09021C9A9006AD4A65F0E6A5474D424FB75DB809ED6D7FFA
B7E8806F540B439B5830D78FA032466A> |
1083 <001C60D8A8C9B5EE310E273688D5967564A4F33CECCD047C96E15EDBAB
81F153A61C36CBFBAB190133E34A3A1A4B71EA71DDD04917B19CD50108E8C813
614F6BF0DB4896C9E1F710E9BADF9FF01F3D643EF4138D22D2DA0B3613FC38C1
B12D9530F13A0291683190B79FD1> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-102.036 357.279 mo
(\017\262\002\310\011\2470\037\022r,\264\033\240\031\2365\003\035\264\012\037\025\222\025?\011F\004j\017\262\004;)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
104.964 357.279 mo
(\0000\0006\0009\000/)
[10.6536 6.65753 8.64954 0 ]xsh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
141.264 357.279 mo
(5\003\035\2642\253\015\273\001\304)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 1 GetGlyphDirectory
3 <001C60D8A8C9B8707C25> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
201.264 357.279 mo
(\000\003)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 12 GetGlyphDirectory
87 <001C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED294
48713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC
43DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E79
8B36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |
85 <001C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2
CE6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E9
83E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B
53A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA4
55AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D
8C360275B503E4954E912CD342> |
88 <001C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58
A199CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB9581
52D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D55
5B867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E
169A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F
97520325221F3417C7781EB09765> |
70 <001C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438EC
C54400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F4
2A6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F
9C2999730E7919239B324086FEA852156F456647AA0692084759C352D6998971
799F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |
38 <001C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA
345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA
9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097
158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7
399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B2
83409DD22AD16B7DD28B54D5FC454C> |
82 <001C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD4
416250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDA
F996A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA43
6702294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B6
8D9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |
81 <001C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7
BC81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD
9D4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494
DF60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B28002
6130687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F
2E277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6
A0027198438FE663C2EACF82CEB86F7C727594> |
89 <001C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D29
403E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF
33B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0ED
AEDA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D
98258ABD433E9E> |
68 <001C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC55
0DEC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C
6B177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB
333E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385F
DB0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E
70BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A298
95DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B7
37B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE327
2EF1EF1464C3F0D45D7CBB8749AF571E09> |
92 <001C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5
BAF02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D57479511
9A3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50
B8B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454
DD6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9
DBF9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F1351
8A71BC990F312D4821883A95164BCE1683B85434AFA8> |
72 <001C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2B
EAD3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A
15F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7F
FA0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA5013189
84A59E1CFFFD06EA629758085868D3F5F7204292> |
94 <001C60D8A8C9B75BE519AA61D877C3C311C2F28ACFAF7BC819EE3D6DFC55
ECAB40F0EACA922DC66BCBD5ADCA3997440BAEFDECE97E13A9AF42EB4CBE11AB
0DB56DFC050B6FAEDC6E90B6705339CB2C1151DA03A6185D34E0E1F3F257D611
1A7AB16657D4D81ECAA39F196C00D5825644A09D696CD55D1D4D8139B9A3380F
5C9183492EBD896B9DC9F0CDACD06824D8D3EE63FF6A3A087EF91537F902B42F
6BF439DB49533E563D7126395EC920AA61D4F9E4D09FFDEC1DBC5205FF97FCC5> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-78.516 379.299 mo
(\0006\000W\000U\000X\000F\000W\000\003\000&\000R\000Q\000Y\000/\000D\000\\\000H\000U\000\003\000^\000\003)
[6.66724 3.33124 3.99115 5.99524 5.32324 3.33124 2.99524 7.99933 5.99524 5.99524 5.99524 7.32715 
5.32324 5.99524 5.32324 3.99115 2.99524 5.75519 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 6 GetGlyphDirectory
76 <001C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F
4D9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78
F98C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE3
65B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A6400850
90E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCB
CB8CA3E9F85837FAC6> |
79 <001C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C4
304B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B682
8D244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE55
27D6441CE02F5A28D63A618F> |
74 <001C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F6
0847F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7
FF4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93
AEA8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02E
A707BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7
A8585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25
BF9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4E
A45E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFF
D70E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC8
191E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D300
2781921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015
D0BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD
46F1C707> |
75 <001C60D8A8C9B7A73DB904DA2C7A38531EB5E07DB80E9375E00037710435
E027FD1F7B471BB2C47AEA703B8CB5C9C005CAA0B77F572194961F7C30413194
A0134D3FF9BA81F629AD195D96BD3C1285904670FEB33C334E260F33EE9AB1A2
D9C0C66E38CE4D3CA583879DAF16CE988CC2A14E39FED6599F4B0F3F8F061B58
5E2410824AE8C179E66BD3AD9F6E34CD8CBF79298E3E4553D0E9DCA292805DED
8E36C58209B17E38B2DFAFEB881CA5FB9EC7A76A0CF0C4BFE83CE749EBD15B15
E97FBEA4E90F2186A54E69C28F4083AB76DBE019E4C57B27760FED872C448379
6F735A795EACD82F245D81FB43B5> |
15 <001C60D8A8C9B8707CDCEBD9C789FC719A6E699B9D99F66BE737EEBAFF71
11B9225F270084B7F68BC0DDECBD8A23968AE48D16B628A165111DDE7E6CD8DD
6007F82AE5C9057E54AF2D17F8AB7C9B11610F20000D2C65AB75461D35EBD119
C9E1C1E902BC7C231A59B4A0E3A4C206C50EEA0EE1> |
18 <001C60D8A8C9B854D0F4B64A43F243E3CCF111DDD476299F3B748356> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 401.259 mo
(\000L\000Q\000W\000\003\000O\000H\000Q\000J\000W\000K\000\017\000\003\000\022\000\022)
[3.36237 5.99762 3.33362 2.99762 3.33362 5.32562 5.99762 5.99762 3.33362 5.99762 2.99762 56.3401 
3.36237 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 5 GetGlyphDirectory
17859 <001C60D8A8C9B5EE3102E759D2CD4FC281C8AACB92E0A561F56166A5A
25F0BCFAD429864B945AEA8C62B8F955AAE392C5C2AD6F6CA92C841989051C99
84028A29CC069F41BBA583494F2F68787E14D294359A4041191D4B6A2FC0BF16
7B6FBB06A192546919EC1658A1C022E83FEB90CE8652FA39F1C1156527C983A8
28FF234A965F987450BD838CB3428B5240A6B86F86166C52B53D7598CC60FEE2
FFC1D5BFA73B5BF89A6FAD9FCB0F2760AFAE4C0C077F2F236AD04A20864549AE
45B9AAB9B1F53D89B455E422CA9A6B85ECBA04E0A5C0A904315A1732C3C692FE
7C483C9D3FCFD3A5BF84AC3C7E27BDFE2220516CDCC15842C9166FF83B8E35D7
C28F3D8EEF8BFECD00125E552032A891F1FB285D690E36C92B61D4CCB62564DA
5D730CA39A8088C4355CFBFC8AD78DC06192DC34BB28203DCC035F469793C920
D090EA8894E39205D7C806EF9FB0CD314135A108BF50BCAEB6FB9F126A33C91E
3601F356F7E5E293A6AB1F7513B516EAA8931AC29C5B81D62B9B71A8DCA39DAB
2B125F95A02F04BF04E58AB3D5040FE2FC005F280E40DE4D9C1B559C0BB9C687
4CD45C4AE344B4C470B98B21900127C315867E9B61C1299813D7C12> |
1941 <001C60D8A8C9B5EE31020D2067681CF82BBB8FD13ED0046D1DF500CF15
0B50BA82B160D023B0F29B4ADD81948FCA2E1F58D798AD29FC3D5F985B2C9329
0DADDB9A11CE34DD2D76BAE09076EADDBDD2C41C8A20687A4E0B693682092E05
36F49D166501D9DE3C54C55B9F8DB065897E79486D7BE0D2E5A87FFD8FEFCB3F
216A> |
1791 <001C60D8A8C9B5EE310DAAEC954437FC1232065A3A3EAE943444F9BCBE
8476A3CECD8CB454929CE1C75A8473E77F2264F0D901A47C66DE0F70ED5FEEEE
DFA5AB0E9B423F658159ECB9810B9B85CC4E6E704B85490BEE929E84489DC5AD
514A47B275E78FE4F45D22690D9A596398E10440F99EC1E679AA5C7F849B2A5E
BDF3969665C1ED63C044990ECE404AE976BDB0BDB5566048243D1EF1B03DD765
ABAD612896137F783694EA8A87A50CC128E01B341EE3966D2EE27ECF2C88124B
EEB04A04B5B343A7CE56002FE49922C676F8871C31103F5E629BB07C182C76F8
D658B713A46E3CC996BD07CFE28AC69664696D23F34DF3266AE5B6558D465A8B
FDC3994ABF5A3D8E5F54834FACC2F4652B034D410ED9699316E67D28A25682BE
A2B8D7DE78102700DDD4F8F64974F38DA286CE88C56E34CCE57E29D221DDF2D3
379EE261EC7C90F513DBFECB36DDA81AED1777A424E5E43C79038C64D2982389
CB043DA583A45A9C67DB8246B5D389B2FE60701E33A4F7DB091409D8A9E6EB72
B7B7DA27956DC13400546982B6C63AB49F1B3E77C656D3DCD2F62E1615992161
7025F96ED14386F004CD988EDB1A0689EE12EE52060671A49FAF05C34C7FF4C2
479102FF9785C1AFC07E2D> |
19375 <001C60D8A8C9B5EE314C242D55AEC6768E8E1F63DEFAFA02DC89D31D3
C4E0BDE814E530BCB99B53B30D9B903E5F9D96D72B1D364ADAE725CC296A6F16
463483388140A6AF4D22ACEE1FD6CAEAA3FC406157D4F9F1ECD096A8375CD91D
7817D50D7AFD2F85A613E905A87ACD9DACE65FC42608EAA83ACEE7E4AAC99E3A
B967518D4E76576C1969B9054B70BFDAF66F43BBFA9BE6CC396D387741877103
D1375990F0935925377458DEEA87C6B790683E46C> |
5334 <001C60D8A8C9B5EE310268CE6DCE9C38579ECC47A3A38310EFF29A4C57
AD423F5177C16D22E63896AFA614414B40A940B046E2D34D08F74D2B0A245830
35CFCA0375AD249C4BB53B3456C0FF12D4D0BAB2FBCC22B9AFB94847922E7DF1
488C43C30DAE76886ABF2B90A3ADE6922EA6A613CB98CA82A252E6B391733F0B
67100C06B654C4EA3CB4B767120F904E489201C6F14556622AD7046FD3AC0B3F
2CF1A139C2C210965687D704EBD70D9F335C04BA9512C716CD2A40BD8F21BD73
244C8F64FB66C2BEB488866E705BD855C5A249B8AEC2E11E9CF340EB3E38A75A
0EC7CB94B19DCF4B2FEA44D1C1BA2CBFF051AA9C7F35D3E6B1A80CFAF93BBD7B
1DE59D5184152641CF739900FBC712664B21BE373728F44D152E01A91903342C
D441463BB1D41FF582FC3C89276FA7C25E442E1E6DA6552287D95A0FA6ED9A43
BBC4865D> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 401.259 mo
(E\303\007\225\015.\006\377K\257\024\326)
[11.9905 11.9905 11.9905 11.9905 11.9905 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
123.626 401.259 mo
(\000\003)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 2 GetGlyphDirectory
90 <001C60D8A8C9B6079F04262E67C9FB6DFF2B2A2909EEE6C74AA460646E64
18023C6B7542892CB61B617E90DA8C58C94D261B2066526778FA77F05506A363
FE5266E7C038D05568B67F867A9FF97988CC575C0A7C1F4DE18568CA203BA523
917E8148BF72D6E4FEA4245E4F8E144E9C4F6DDF7EC6DAC323FEA1568E1A6C8D
8526507DC2E91B066C274F65DD58F049FFA3E606BF021DDA3B6174F51DB721A6
C7E1197FF1898AE92ADB1C1DD84FD7DEC1> |
71 <001C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D20
3065B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD332
9A86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB8
57EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5C
CB01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD1
04E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A61887936278
3A36815EA1CE5876FAC4F83CDFE1BD4A> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 423.279 mo
(\000L\000Q\000W\000\003\000Z\000L\000G\000W\000K\000\017\000\003\000\022\000\022)
[3.36237 5.99286 3.32886 2.99286 8.65686 3.32886 5.99286 3.32886 5.99286 2.99286 58.9799 3.36237 
0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 1 GetGlyphDirectory
4589 <001C60D8A8C9B5EE31008E51B15A64E7D2F387C348F73685CD6C78EDAF
A9D4EDA146D8B5D5C0D797312D94BF13402F44AE570763C55668898B5F5F01B5
F0E320CEA913379CF0C3487319077C3615D65302266896550CA21AD73A7225A7
51B6305DDEEBB57FD0FE2D238924859D1B0C3E38459282DC94BED86471C78321
044A521898F360B798C015E2EDF0522F202A0A6387D0CEB5E0B381A81D977424
75A35ECA785C1F26E33696BBD291AB24CBA500482734E459BA149BF7FD46DA5A
0E30DB8CA5EBFB0E8FBE82E00ED06E9D9713B558CDDA4A39B2AE1A085249EEC8
4CE520AED48B57A1B3D2D64A095084599CE6D749D66E2D9A11B8DB6FC0D82EED
21CD75E65EA056BBA156B673AB82E98E74887E2E2B7482F73F16B273D80CB73A
4701C9164CE611F89405ED64EF4228A87A37B81961F05C3F18AE13201163893A
101254C4DA661F8E26B6CBE5A0BC2B5082681A424596ECACFA18A685FAAEA8E8
66A3E514E08A6C3BE3F2F45C5C13CB26ED1421AAE2225B5FD72252828675E67F
32EE9D1BBB083D0EC5605245BA018488410FBF56437EFAB0670CD1> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 423.279 mo
(E\303\007\225\015.\006\377\021\355\024\326)
[11.9905 11.9905 11.9905 11.9905 11.9905 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
123.626 423.279 mo
(\000\003)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 1 GetGlyphDirectory
66 <001C60D8A8C9B7A73DB62B3DDADB4A842090F7415C025CC5> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 445.299 mo
(\000L\000Q\000W\000\003\000Q\000B\000F\000K\000D\000Q\000Q\000H\000O\000\017\000\003\000\022\000\022)
[3.36237 5.99396 3.32996 2.99396 5.99396 5.99396 5.32196 5.99396 5.32196 5.99396 5.99396 5.32196 
3.32996 2.99396 37.0201 3.36237 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
17994 <001C60D8A8C9B5EE3102EB2368AA8B31FE31A072BD4DAAA45037A5A46
9DD926437332A22FD7A5B52606FD98D719D1C30992C941A8B1EFE4A6875DA3AC
A3B5CF27EC0A54654A99C9EF39A6A535B36A09FF005CF8E7EB5A5F1914DCB32C
1549D100C9D9ECD95F827C9E970FAFC7EFD08C5D29F9536F577583960DFA7AA3
C99F0103256240EE634F71E1F1415395EBA0C3118E8B839D51BE147A69D4C895
2EEB52DF4B2D32E8C842C1EA6534B7E37AD6058D8081799B69D3BE1CA74711DA
66E7512EBDEC0C143AEDA9FADE2DB424E897B6BC19EFD20097660BE58986F10A
E532C3507B03D6D285D6EFB5BD7373A7E9D2ABDB51F21FB1028F095C61B91E9E
72BDC858A0AE48207C5E40F630851756A92A51DE8B87F7DDD04BF6CFB2829ED9
2A0F2CC2D044C6850258FFCEC8DEE7BAEA605775D8CEBA8A8004210210EE7B1E
CA069DB7830F66BB956912F7930341098F509BC0CECD70CE1BB602ABB94069D0
AA3065F705137A9A85406E4B9F9985A1E82242956C7B9432DA1A6BD00D2175A6
11DA13AD86439AC7E4A2F> |
18051 <001C60D8A8C9B5EE3102B1EF11F64593AC5815A880B60693C29D34A7D
ADDA3BB9BE992A4BB1A77D011F5A51AD927751BDEE974C3B37E99A29440AAB41
C34DB99B66E3BB8707F62036FD2F17E14D3477117D6CFD204CF8543A184C157C
22859E7E6EC1D07B8C6EA77C86C9C446DB6C8F8E68281B2E83D9E1295C47066E
4170E6542B9CB75936D0EE1F2581541E26266A893D42296778288BBBE173406B
9E72064A79BF459D90DF73808BD115FA66E0353E133F292DE406C00C507E394D
D973C1A37F86B65AB38484683D67240BF036B2D6255E9AF6B1E9FFAE6F8614D4
4B1A398ABEF980BB4E225C6C3CEEA313D66A91EDAAC23113BFC0237179898ABE
61A7406E5035698D4F6359C613586BF7CA88827248F07283810DC067167916CE
BD96001D655F46071A2E2AF6E8D0E17DFE7D46FC44B71D76D6DBC0C1C44602A9
87A22D32A711E7FA12F53A4073A1E18DF3F79561A64ABB00250821681671FBE4
744E20484512E421AAD5956FC27F00C901C7CDEF14975E93BF94A96D09E2EE47
63D8DFA6ABBE44E04> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 445.299 mo
(E\303\007\225FJF\203\033\240)
[11.9844 11.9844 11.9844 11.9844 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
111.624 445.299 mo
(\000\003)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 2 GetGlyphDirectory
86 <001C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC2
2ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A
039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF
40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359
FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C5
93B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF50
9B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |
93 <001C60D8A8C9B77FE2C18484DB453227C527C164B5A1471C4657A5A14A46
A1D3A0BD899640627BE2A7B9DB921E26CD53975830B919737E4B957FDCE605D7
7DC327B798A39B69F36340D55162C5C44140DACBE16FE7873A74F99AB90B7497> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-78.516 467.259 mo
(\000\003\000L\000Q\000W\000\003\000V\000L\000]\000H\000\017\000\003\000\022\000\022)
[18.4799 3.36237 6 3.36237 3 4.67761 3.30231 5.34247 5.34247 2.93994 67.68 3.36237 
0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
3927 <001C60D8A8C9B5EE3130B0B5A2C125B9F3BE194A221AA734987A2741F1
7A94D3BD3FAB19F51D8F9226997DF47ED66C8391579241E21FF5E1F71CC22B7C
64688F3CF56413D670177E19A6F868562BF9C1C5AB2ACD8CDE7E8F44B0EE4489
8BF1A4B3E23245B5C2D827E98FFFD00118E51E5977DE36F42DB76899E1F73569
F85D2F43D0F648C5E3> |
4671 <001C60D8A8C9B5EE310245CD8A31326C88203D60FF2C14D9B98E0ACB94
70E45E8DC5DB48B70F036535D3C638CF26682CE62DFB9944C210C1ADF4F0CCE9
1A9BAEBD6FECF49B89384A2B4C8DD8A30D887FF6508DEA8BF32E439F39B94699
0D07DA935A8CF675EB2509E2D36530538C4986368E1977AC288FD56CAC942F0C
B4CB60A0CAEF0FF160C1559EE1F61EEB705234E294090C92984BB82F6868967F
8573679BA3BE1E6A406E26D3EC9C8386E9> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 467.259 mo
(\011\2470\037\036h\017W\022?)
[11.9844 11.9844 11.9844 11.9844 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
111.624 467.259 mo
(\000\003)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 489.279 mo
(\000L\000Q\000W\000\003\000Q\000B\000F\000R\000U\000H\000\017\000\003\000\022\000\022)
[3.36237 5.99634 3.33234 2.99634 5.99634 5.99634 5.32434 5.99634 3.99225 5.32434 2.99634 53.7001 
3.36237 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 1 GetGlyphDirectory
18431 <001C60D8A8C9B5EE31025C74B0D5FD83FACDCC1ADEC937952F0F4AFD7
55A23BF6644029B56990B96A60051DE5EBF4CC30DA701E2CDC2BEB0A89902740
BBFB90CB27E4E05415958C5135796618ACC5D45F0AF7B96268090C489AE4BD3A
146FF63E48311270F284E5BD04B3E4711B681BCCA67218C87F46E817767C1E4C
6B2BBDB8F2629896E6DC6A51223FCBA055EA4AD0D1AB8DDE999D91F4CC567BEE
1C631BF1E0E7D15EE4C6DE7C05650594ED77074E913D01B0BD318771141AAF63
A71BCF52E67EC442D633E525C0705D200566BEB18BE99CF09CE1D425F51F7F4D
BB07727AC389D120AFE105974DE84142812344880DAFA3C5C673776440E522AE
993A7EEA7B8DCE2DDB52A83F3D5BC2F38854D39> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 489.279 mo
(\011\2470\037\036h\033\240G\377)
[11.9844 11.9844 11.9844 11.9844 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
111.624 489.279 mo
(\000\003)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 6 GetGlyphDirectory
62 <001C60D8A8C9B81F2C3A069E97D4C1B29DA23BF51FA8AE87F3969878E69D
10DC348BAF69> |
13 <001C60D8A8C9B7A73DB96A9BE2741D30049DF7EB3D49542C4E997965F360
CDF01353F56E0042CFF11E8B4F51F996B11FDEE72CFCC78686D676EEC3484B7F
19B8A5C84F247A3A01B806F435D2D29EB7FEA972206EB1E521EB68924398589A
105B8618C067AD5089479518D26E7069132D6367F6E8567A6BCA200B56FA0959
E88530C6CDAF56D201F0260F15F65A2F68978DC9FFA3B6BE0039E2632239B9B3
D3A614215C65ECCC4826872DD75E382DBCECEC495BD438943C0B852EF66581DC
9AE333E3E59CE06DBC76FD5288764EACC6D920257C19C8418F9CECC987960A35
E70D830E3345E4924D24BADA5407D6F188B0846870A7410D17893669E9BD7054
1F6F1E92E22F0668DAE327A0157A5AA01532384766BC967CFD08613EFCBB67EF
2E876EB0971F185AB15CF5D35DC2053C1F2C5FC1E76272F35AEEE47E08D4B480
6B92E12E31A114B54D9E2A54907008A32B197FB6D5479DC7B18E574EAAD480B5
B2182ADAF4FAC2C9FC56D0B1B40EB580> |
14 <001C60D8A8C9B7E7C1AF20108BE9542537F46D63CC3CA2839958A1F5DF80
C8F650E8951850C571859AA14DD682> |
20 <001C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |
64 <001C60D8A8C9B81F2C7D3B98BC3C6790041552B3C4749878E48F0B17EDC1
2AFE367344> |
83 <001C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD4
0EB48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A092440
48D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBA
C666023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F7
5904A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B
8431B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C07
6E94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02
DF1C7730E7CC0F462D79552DFA> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 511.299 mo
(\000L\000Q\000W\000>\000V\000L\000]\000H\000\015\000V\000L\000]\000H\000\016\000\024\000@\000>\000Q\000B\000F\000R\000U\000H\000@\000\003\000S\000D\000U\000D\000\017\000\003\000\022\000\022)
[3.36237 6.00604 3.34204 4.00195 4.67413 3.34204 5.33405 5.33405 5.93994 4.67413 3.34204 5.33405 
5.33405 6.77399 6.00604 4.00195 4.00195 6.00604 6.00604 5.33405 6.00604 4.00195 5.33405 4.00195 
3.00604 6.00604 5.33405 4.00195 5.33405 2.93994 23.9399 3.34204 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 7 GetGlyphDirectory
1959 <001C60D8A8C9B5EE310DFB9311729FBA5EFAC82B6827CAC59EA941B083
7A4E1444CDC05781A5F5715199C55AE0D247C25F88B5D564FA70B44E317B6CAB
E2AC62B3C024B305BC2EC8FE30C9D7509760DAA8684CC1744523EFAD1C399301
1E4809245A063F76CD1DE412DE658E088827434832C25648C835063888473B22
563A3A1ADDCB50A77BCFDE9F8DA7CD526E04443D9704E857E412966C222FD013
4F010FE4078EE47B8810CB0FFDC0136DBFDF773C84EE44437DD19CB596B58A9D
1D2EA0426F3F4A342042A9248B58E7> |
1411 <001C60D8A8C9B5EE310D9DD4E1F2E4B982D680534F99261C646BDC6029
92572370D828511581FBA02811CF297FB26E9C27A7B7C088A9BB6DEF7EC861D4
F60E0B679FA90DB77B17E96C5C94A687CDD0CA4DC743988048737DD11592B76B
B6F8C5AC0DC600F2A4E3C532AFF32690E1E51FAA70F61E8CFFDF4891320C6752
F74F508C30FF5407492460B9B264DA4B0289BFACD4188B23EC8E30A62934A88D
4CE728A24ACDEB3BB67C4E66F1E85BFAB95092AB8CAC41D24DFC4A0972055FEF
C6EFC1C902A1EFC4E8445F320A7A711450AA7EB857CD4D09065CBB53B8ADDBC3
3CC07526D4F34822621510C650144B10E976E539D40C495A> |
2546 <001C60D8A8C9B5EE31035A729C652551ECD798DB1C4AF54D7F28C84F69
9BA4040769B149DC6C9A5806A5A449CDF0502F5DF46A599AFD3DCE52CE69A1E6
735D961050C65C469099CE26D7082FF34B2BF6B5D7FAAD769E233BEAE1D8820C
DBE526264929AFE9B814839F0FBA30F2BC5EB02B34CC926F5E30A2EDF2B6E18B
F6B2E3ED58CF3E34D96FE361CB6266CE24742DA2CDE97E02D25E36228980117C
0D878B6E5DF064A66D6AD9EE9ACE06B478EEBA372D1808570A58644B73B2747F
AC61C5AFFD7E41FBA8E93DD6D62C61F84255B21071258344B634E74E8A67CBB7
6C6E6BC402460D4A8178299E443808CF7E5BFD52DA17AC8938C0E2ADCA59ECD7
0A967815BB7FB590A40F344122F1C9F987A219C9A8BBA3F1AD141F927674F37C
7D011BD650336B9310FDC58F6E84450E12AD16C17E62F39FEE8276E4B44AC61B
1CD10A8D41708600DB0C95543AE9BB3C474C5CBCE232729412AB478F676E4BAD
76761EA0B3> |
2651 <001C60D8A8C9B5EE3102BD3C69AC50F4C499B7BD4CC0D32CF99F4E378B
AAB8BF660B89617CEC2FD107B87CD9C162B5631D1C2CEC12499AEFABFC107622
4A46A22D3BD20256B43FE9A3170B70146A70923B2705044B11466E9ED793A5DA
07AA7EE1CFBDA455B99E62D475291F231CCCE7F7253F534CA47CDECB0A2B7E0C
1E62F7547E0078E131FC01EC22EFAB956DB51756708F2018D9951AF9B9C81648
397390CB27F4798787F373C5FF05435F37A1C0F3150BA9860E1A6CFFBBBA7303
A6AEFB04614E4C9D2B819277DD71E9DC1C2F078DA6AAD34E368EE5BFA10CED6C
3478E997785CE63ABFE29EA7097601FE54DA97C1> |
1663 <001C60D8A8C9B5EE31033B726FD812FF9A0B63B74453F094D7D69D4F8B
28481447CC42992D2F9E9F1BD577B190CDC5477A4BA608BAFBD5F790F43A6EAC
B319E3C5F89E630F0D36AB078C09BE08E4FC1178BF4E4ACA596C48AC4A0CA198
A05150F018A12C1B8276CBE92DEEE8D83E13D356D439FDEB40D1CC1ACFEC2AAC
2F149C9749C6AD25B799C94416D0D1991391E1F83129298272FBF110B742BBE3
2437EB6C3445C632FC0C225AFEDDDA3A12D9B69937BDF09101DD38DE45AE3D3C
CD08D3479C000CA864126DAFB9BC9D47B8088FE538F8E9DD2DF3CBFC6E95A19D
5BB2DDA841F64E992BB823FE9B94A960FCEF9117CE7ACFA7E527AAA281E3DC62
D3D28626DEE91777478D397B2DF17C04A3BED44C6A66AB1CB1C5EC6562DA73CE
0006FFB4F1DC4E9A77E4FDA864F47BC93EA65F7980AB8305C55946570B06FF23
699FB052A1A2EEBB7C13EAA83B2488F1367CABABFD7E90A08548F582E6DF6297
915CC032F35DE2EFD1FBEBCA55F85175> |
5150 <001C60D8A8C9B5EE310DE7BD34221FA93CA8956DE8ACB4CA9B90CF6759
221C9E7C034489FE1446BD6DFEF8AA2F57A58F3292417A45FF11CA7BFE2D45AE
B373BF35628138DD7709D98857E22E54012FB0D633822E245D1F21FBF7EEF1FD
E67F671866E6D86F952FA1B7764A3FF37CC71CE9FBDE2DFE653F21072B2E3F23
59AE07BEBC13326F898B6CD00953F9684FB585C59A2387343117DF96FCA777E0
8B2235C2BDFA2D45DD7EAEE9BCB15C2888D292E3897D88D87E2DF27B6E1FD9E0
13E897112AF6E9F8671A691A067F3AB595D97D9B30A2B44367ADBBA6E4E6903C
743BDFB17AB2A54B4F3CBC9416F4FC85ECA16CC84686C6EB37E856B0BC92CE89
EAC5941B1E92> |
13099 <001C60D8A8C9B5EE3103318D4E0E07772F888858E2D9450925ABAB7FD
78D1B5E22A9DE3F244AFC6DB55BF1EB1A3734A506A3B27C527D71EC7CD3B2A1D
A0A087BB6FEC1F3739490A05031E54356790CF3F85183928E0A642F971E12BF4
06B5D9FE7A1365212D276250258492465470F2DACF968FBF093EDD969A2B64D6
DE5CC7E67258DBA66243B3195A1060D0BFF6BE95FA16784A7C8B2973C5562A15
2C3F24A608CBCC381BAFB99D96AD8A784D591F962A63CCC1523FBBA0BF4BB735
F69AECE4E0BA3696E5DFA880B763E7E527171F05D10FEAA055C49D1B1441CD16
2C3550126CA37DC72CE26474C632F03934318769D40F7D23C4DC2A6A0F41AF7D
D9542F4BF2B0B5DC5395E3D229A568C1133F90951A8A91096B70AB55B5C8EA02
DEE632A59F48085134D717122097C61908D4064167862E34F9B2270F60A22FF2
98D50824C34404B71CB7A6DDA9F56422DD2995F6BB9E2175710FEECF73CC8174
2535607> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
114.684 511.299 mo
(\007\247\005\203\011\362\033\240\002\310\012[\006\177\024\0363+\033\240)
[11.994 11.994 11.994 11.994 11.994 11.994 11.994 11.994 11.994 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
234.624 511.299 mo
(\000\003)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 533.259 mo
(\000L\000Q\000W\000\003\000V\000W\000U\000L\000G\000H\000\017\000\003\000\022\000\022)
[3.36237 5.99524 3.33124 2.99524 4.66333 3.33124 3.99115 3.33124 5.99524 5.32324 2.99524 59.7001 
3.36237 0 ]xsh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 533.259 mo
(\011\2470\037!\225K\257)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
99.624 533.259 mo
(\000\003)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 555.279 mo
(\000L\000Q\000W\000\003\000S\000D\000G\000G\000L\000Q\000J\000\017\000\003\000\022\000\022)
[3.36237 5.99524 3.33124 2.99524 5.99524 5.32324 5.99524 5.99524 3.33124 5.99524 5.99524 2.99524 
47.7001 3.36237 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
3739 <001C60D8A8C9B5EE31025028195BAD94044361753FC4DE5561F2FF41F3
56E1C4660A40E4DA60362ECDBFE121DC8CC121A176D4E9227F226AA92A31A59B
AF2328785F87AB7C1B663B7E70C4EF98A9A22115AE8A25586E73BD7A4A92BE60
079B271E26701B91AD2F72A2A7FD95B02D88507E0DFC180FB760945B27850615
88A1B755B7AE611A164035714767CEE1664F8A1D7F49F70653AF08C9E180FDF0
6AE2F69B069A47FCFC0E0987F6969052146A25AFFA016F5D0B47BA1ADE8B4407
5968CE93F1FF83576316D6EC6BA6D7D3E27BEB194A620F6839885D7C09C1E985
CD1FB3AFCD75C5B182256D2CE2715B80A595C8D7F6778A0725C61802F0103710
B31B22FE976E2748984CC909D751C5ECDAEBC36542236314A91775F83C6245AB
9F132B5CF5787D9387CB134E137D6AE48856920C5883603FF01002748AC036B3
B57F762ABF721B1F0BCF> |
1909 <001C60D8A8C9B5EE31021357CBAD080EA7944892F033E2BEC49F8A621F
FFECEDB2C006ADD30887A44884161A0C761DBC0C7BA1BBA4900168EA74CFFE9B
DB37B7A3DAEAA3CAC6C47C4C1116A6A5F4C93E65E402A9B3031B47769766DCF4
66338F802BDC60049CA2B438CCD843E12092134E81F5AD75E5239565CDD8AFE5
806B312C37DCB25E69C986E34C6B1893840AAC3185FC4817F972480BDB6374D5
78B412CCB56BCDCC2DEBC4D2079BEB12B7193DC8DB084BE2E28ACD93683ECDBE
E462C36C72D14C69CDF03FDF87F04239BCA0827AA13CBE5850725E05851541D4
157129C30BA1D41D0F8109A78FE5AC3C9B4642746BB727422F7F31FBD532795D
6AF7B13ECF7AAB668672F04319F8D7DB690A24D3> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
51.684 555.279 mo
(\016\233\007u\021\355\024\326)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
99.624 555.279 mo
(\000\003)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 4 GetGlyphDirectory
32 <001C60D8A8C9B7E7C1C5666C28B48CD4A694178AF152D7001F5F174D4D8F
120B3533D4> |
5 <001C60D8A8C9B703FF267AC18EDD7F22DD2EC4A07B3D22EC8183F6E1EBE58
4DF88B1472698F389F75CECF50557FBF2D61592000EBAFF1FDD7CEB3C5B3DDCC
4ECBF46306B33512E5C32FB8EC4E648FF402F495CE10E8A33B9A9D02530B1AEE
A7B6BFD781C01FC03F0DE3BDE5646743896C99C0E790339499EA78CD5> |
53 <001C60D8A8C9B64EDFFA947759DE5E4889D88CE18F8690AE99A205DDE2B0
3BD344BEA750622B2A044F453846260E52F609F4B4A04ACF011765AB379E687D
E6B09D424D16AEE22850269A8AC1FBA0CB1130D1AA42D9BB70A20B4BABF91935
6C91EFB227A4D8127EEE951F8E9564FE86E42C72F4A2240B89192C9DDC8F972B
78271704B555EEFB95806003600DA3EB98ED971FD7E60CB5D9582744AABB3235
A69A23AA1EE2086410DF2F65A7A8081CD915B1599189D60C09010312710E9ABC
20DA4562DBD2C8D044173C4F2A486F4032CE9228CB8A1897A7C6FF5127> |
56 <001C60D8A8C9B6079F6D024388243061A610EA3A6326F33263CDE8BCFFE9
F148F3D7F4C9725D2BAF9A3232BD1EB145B5A77D8B0651FBD8E8A9FB06CCD2A8
CC2722C436D9102F6A183E894B34B7045CE7C217957AA9B87F4515C93092C441
847223DE93B9E3D8ECF6C02AE8C75FDAA89CB34F7A7CE8EBAED7CDD0E6765B39
52A1A95E2E1735ECFE4DF6802DC3188EE398A9F5CCD7DB8E0B3AB2D84DF5AF6C
30AB040D323559946C1407613CE0866FB1002EF0B5DF66414A685DAD87F9D351
3811F878AD> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-60.036 577.299 mo
(\000V\000W\000U\000L\000Q\000J\000\003\000D\000F\000W\000L\000Y\000D\000W\000L\000R\000Q\000\003\000 \000\003\000\005\0005\000H\000/\0008\000\005\000\003\000\022\000\022)
[4.67285 3.34076 4.00067 3.34076 6.00476 6.00476 3.00476 5.33276 5.33276 3.34076 3.34076 6.00476 
5.33276 3.34076 3.34076 6.00476 6.00476 3.00476 6.77271 3.00476 4.90082 8.00885 5.33276 7.26233 
8.63763 4.90082 38.46 3.36237 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 5 GetGlyphDirectory
9712 <001C60D8A8C9B5EE31029A72AB2286EEAA1F35875BDEA365704D726438
47A15A231A0E5AFB3BBB9F0D21742EA17D5FA443B25AE27DA62FF62A64C8C2D0
FAD61342E8F3E37A78BB0FC33A81765FF96EBFBB801F21A906C78CF098CC48A7
12421CF0D3F38FD7EBD102D8EFA1FB16E2F9C62BF711A430727B51D2DCBD093A
63D70ADE29F37AA0825727F24F316BD293C231E9D7DC64811F52574B03083964
EE217DBA8B307328B46912BF6740C9CB26598B7B989E3C07A75A0CFC0100FC61
22196C384ED85EB22F2755C2C710FEE511B972496B6E278E80471356FFE478E8
62415F5FFE30B777559304334F3169053BCD0D3067381DEF411E728997AE05E4
8BD77046AF3B9601A40E1D550EBA23764C59D04484919AC77A43FF00778096D9
4338E22F988D5211586AE37AD045AF6A74E8EA37E96EEF0C5FC842B5E02CAC6D
6AB49F7F6EB95058DD8C1AEFE2B75332435892952CF64FD30CB4444E5E201B13
4E2BCAB04799AB2268E423233D5F9518F2DFB642F72812CD7F5D332275792B1E
71A9765081E112EB56CED19C527C4ECB4FB9A4C3A63EE73E27CD39C4BB5A9E63
02DAD546823DAB07FF571898F6CAFE30200D2D0BB6BB2AB36F8229260E960B83
17EE9AD55AB66EC5EE1CC35FF2B4E866C38684952690F17EE30EEA3A98A0E3F7
0AB96D2FD69C1EAA4A6A726E28B0CEAC137ED9556E17712BC950E98914B2A710
9D0D8A48BED836B0BC80DA91EFB73C1ADDB07F2BDCA29D69EC5B6E408FB951BD
4A5D1F556C27B88E6AB7BC859956BBC6B704AABF4BA0B7F9164C21CF> |
9067 <001C60D8A8C9B5EE3103000F9FD84AFF84012ED7CCFD8A955FF66B130F
D69DC649B0A8B4821F6223B05EA21E6338486383F4705E7384948F1D99A8C434
EE230E77389A5E68A91EA04A8CF6E17D57B1FE616752C2EBEE0B912CB74E87F6
BF613EA4EA2D79B41C20181F40B8E588CF27EAE47C4F5438CBC171A4877D30F3
7FEA089D2721FAB2A70F58C4D8CE2AD87AE8D6265871DC6A6DA7785372239056
2F5AA20E5F4494F5A12C83BCBF8C45E8A9C6EB019127D94AB726C3E14CB886DF
7311150A64EF5AD4D93B99AA2F6591E5F0B7802C7FFD526928A0DF0AA62E8025
6674078B1C7EC157291084B6AF2C8FFC3FF7A2BC70E137E60E6EFD34DD253618
58D64DC7DFDE245F3D5EEB416B1FC3F21C824943FDC9A1045DFFEC7898196589
9DA24D247B54648A0A0A42D99B4B22185BEDB2913F56F845A543655D1E7E8297
971BA2E99EAA7FAC13769BE3FC6F952AF4553C08BC655463785E4DB865DEA1> |
2093 <001C60D8A8C9B5EE310DD53783C6EC4D5FAA9B08EF14FA78C675A2C2DC
458852AB71011AE88297916A3F432F7ED79C92E0A8CC0A8679B8AD1BCD082583
310540F9067354A64B61D0FEA91AB1526F815EFE78419B6841B5F2C2DC33EADE
654422D242A3B61C2AEEECCB87CF5FAC1924916F350F7788DEB5B54EEE978407
21FE483A61EF922E105F7E6F80BC5ED8129D93DB9A93BB94A583CBE9EDC365C1
8E35400979863E1233DB8C63C5D23024D09C2077317E349E32BB152E63FFA96C
AC27736D7CCAA64EE44EEE084DC16302167DF9987D7AB97422188883677613B8
77642DAB5695B5225DF9F6808437682D3B9B296D9359935940FB39529618AE46
045644C5DCE8E01213CA8BC881712ED63C3B969651DE29FDA3F81A7D2E087756
52D88A3F855B56ADB84BCC0C6E2E0CA960BD2144AC7E6CA63774BD612AB7B193
1393B9CA> |
21768 <001C60D8A8C9B5EE3102B5A82393AA56EC4F914F1AA8E89890A763993
9583988A89CAFEE71F6AE317978C0378F5A02D5EB850752F11E2C87B1FEE3B9E
8DFA769DDAEBE05FA8FF277370ABD2DE8E8F048A940D6E786A9621B81DFC00FC
7200E4294722AB4B493B1B44AAE5754E867BA73C9980DB6187EEF6B6C04353E2
7800F382C6A1A03F510EFAB9967A55DEEE1C111ADE0443B785573E644226C61C
47F767FB829AA0E576A7FF625370C55984F09EFFB338D4AA8639EB913BFEC9B1
342A9A8CD3C7FF88470BA89B2A500187D1879093CFD53B050AD3785FCFEA849D
EFA833F34E8E18E76715C52ABBB188D51D1CD1285269444ADB8E05C46978BA74
6640497D63D2F3C3DEDFD430FC8D56C622CD4FD7FA33AB9BE696F65110EB4898
3A1A71A1DA3CB109EA6D8D0B656DEA0CEE1FD6CFC39AC368BE1D82FC2111CE61
0BF83D0C4CDEC1EA2B911F3B3F47278D5B8A536780A7EF88B9961ED040DC7EC4
EFBA0AD41AB702FB6F7E798D49B99CC245A390712741A59EB82B51E0E488C6EC
C013F7750175FDF04EBF9148ADCCC34E7A48C624C26E2C35F766313FF6D321F6
2FFAE41704A0A041813A0588F01C835FB2B4C87F61168FAE2DB5D7E8245AD25C
7757BD8F39407FAFD08405862F10B7B42CA31B6670051C92349B5DF91F6141C7
1C607DA40F997D52FB51EED1E8FE9045B8FF3F1D922583FBEF0E5CF28CBB5F58
FF1C008A94C2436226F83E620201079D5902E6F86EAB68C8CE1069AC3BD38CF8
BF7B5725A66999ACD7D7EE52E7EC439FA2545F7C1778A51CC29D626> |
16852 <001C60D8A8C9B5EE3102F4E5A1CE2E3697513A17A72E24FA4842A5A8A
DB37DCD4549416D9E6B6120DA94E689C4655AE166DB8A185E0D52724A574ABF3
B3D960A5275C3A90C20DED293BB7670956B15022CEE531E880078E57CAA9B588
572AA5D6FC1A505D0FD04BCC5E11F7BBE77EB22EDC4B9A2AF8B4B439D5FBCA15
5CE9463A028C20E7031111F93D6EF7483667ECD9AA3A1B7CBDB89640483D461D
E12F33B4266663DAB8F3EC26A76077C62C78E3CDDCE63B1448EFD981D56A5EB2
738BD554520314541D552D6014BD710BD7DC00CDD24FA6AAA445CCEE8450A372
0E5CD> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
114.684 577.299 mo
(%\360#k\010-\033\240\002\310U\010A\324\004j)
[11.9929 11.9929 11.9929 11.9929 11.9929 11.9929 11.9929 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
213.624 577.299 mo
(\0005\000H\000/\0008\000\003)
[7.992 5.31592 7.31982 8.65192 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 1 GetGlyphDirectory
96 <001C60D8A8C9B75BE5194FC0A0E64D954B2C131C663C85B66DF39FC771AB
DB904B447CA90AD8BBF1FFE57EE2DCC02298342780503AEF9770441ACC2C1F55
3E1F915F7B3DCCC4AEBD17A19995426D3851B28701C3686198F68DEEF87AFF4F
52B770C3653D04593F063A19D699E3ACFC86F66BFDACBEE5F16D9DEAA74E5757
9AC3CB6C5D52F233DD99A0AFA11D8A94EBD2EFFE6E630A285A44EBE668976E5A
AD6ADB8818E7C844FB2A790F4E5620E7BA825323E0C48F30F22934A109F6990D> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
-78.516 599.259 mo
(\000`\000\003)
[5.75995 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 1 GetGlyphDirectory
2582 <001C60D8A8C9B5EE310DCA1A4833F33D0E6702DD495E805549A934D19B
F09FBFFCF4E912A44F4C063662EABC67C38F2BE11C3C48B36E29740C850E0923
EB530BED0D6B68F9B2C3A468929714443EFDBDDF4383AE536FC78E3AEF863F79
4B0F9D5289A17A20F0BC8F7999E88CC419D945ED4922DCDA6D273A0E72FDCAF6
48F8329B39A2E26D2C52FC59D788A0F2BAAA1F036D6A049E3F6DCABB51395DC3
08C9CA48362F4303F34FC290BE43A533A77E1D26D0EA8229E927EC4EA95D6D8E
B704AEB954CB6DC7FBBD16A693ECDFB59C85E409D5C83EA4A623> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-78.516 621.279 mo
(\012\026\0040\033\351M\222\002\310\0124\022r!Q,\264F\0001\307>|\004j\012\037+a)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
105.384 621.279 mo
(\0000\0006\0009\000/)
[10.6536 6.65753 8.64954 0 ]xsh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
142.644 621.279 mo
(\010-\033\240\035\225\010k+k\001\304)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
214.644 621.279 mo
(\0000\0006\0009\000/)
[10.6536 6.65753 8.64954 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 3 GetGlyphDirectory
3895 <001C60D8A8C9B5EE310DC6E8DA946D9574C68DF4BF2BC7DA747868CCFE
95441182CE6E858DE1EA195B9C33FB0B40483509B9577814A363C882850F6CBB
8EF04848CFD4FB74EF08ED1744FC111EB37EB7FE47369ECB179DF00A912FDD8B
71378292EE0F9F42EF25F972BF36CAF4BC0B64A49BCB70ED9F451B41E9AF09A8
2CB3EE6E929B5A0779F57959C7A18D2015258D172179C7A7B1E44887515C23F4
07765CF93E0290C7A174A940320E88094D0C47DBE6D00EC4D3ABC4CF03BACFE8
C2AF9CC4C2D612AD6EEC8BA2BA2B3E9034A1D9F35EE68F50999F50F6985C9655
EB2B14FC5EADB235DC92680D0FE88D9D6560EB1343562807D13D10647CAB9330
BBA2CC91A099A0DDD661EA94D365> |
1120 <001C60D8A8C9B5EE3102AD91ED2B258CA85EC9D1838A0F7EA0FEEF6A49
E2D72F31DBA922CE13F29A31870F2E8CB23C44450CEBAD152BF182C9790ECE12
36CC02958142DD20E43A4A89B7247993959BF86A3D7850EC1A8A6458275EBE8D
13C1FC73BADA6A525E917739ABD26390E2FA17221B9B81A84B6FF10B9E62B3AD
D3BFC0D4645F8D4D40BEC8224BC0630F71EF68F6> |
4604 <001C60D8A8C9B5EE310D9D60C0633C0DB5DC9295FF00D128A24A347409
418B81A4CAEA860348E261522CC345BB27E4D22FEAEBAADF0263D2074C7A88A0
0060B31BA181009B3A3969CD495A498B840382F709AD57B1B68AE5338812EB5E
61E2750229202E6B69127F018EDAC35643EC466314804C77A893DE74B85132C6
1E6A0433E83143961B6133FB740A26A3C1AAC6D121BA3FF7FCD42B5841807534
B39998DA2360C122F9C937AA60BBC5F09E35E78CA8D51254AF116E55947BEC80
A9BD7AB66E13EF63127039C16691FEE9E22C4F1677AC5719D9DF0A96032C6D10
B173EAE4F3E4203E86B6CF533502D62AE5B2F85EF6ECD908DD52CF74C7937278
BB1915BF6C2855139BAEC1D67C99C3452FE30B666AF17FF577B2E49CFC81529D
DAAC475E5F71E5A04BC31707F059C8653D22A0BC66BF76D2FE4F170EBD72E64E
B356DAF0BD125E> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
251.844 621.279 mo
(\007\247\0177\004`\021\374,\264)
[12.0121 12.0121 12.0121 12.0121 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 15 GetGlyphDirectory
6909 <001C60D8A8C9B5EE3102A1C8C69033E24ABEC0CB017499F5FDB227E218
19FA0F4B3EB50A9BCFBB06B0C33622DC2C72A4C40EB40ACA3D2532427914223C
C76E3E0292813FC4D0E49190ECDCD42DA70AA825C3DDF0F2CD3540DC0E5E76D5
C1C37EB5BC05C0600A87DF3CD6EC4CE6B5CA3B349BEB3073F78B5022115AD539
D8056635324824BD8E6482B01DA96D0C65ECAEA0D9FAEBB3D95128F7D682D48E
486BA64BB53AE1308E9E9F8830E1EADCC417D94EAB51E6379A66685065BC0319
15F9D78B91D504629DE47490018B77D2E3BB73495282F39D38E9A26C0F434C78
48726CEC03D1729D2F15A1FC808F45A755FAE3FC1222084EF9F4B3ACFB8E5253
F467DBAD73CE8FDAB06E5FD3B6371B5E59F5DF7138E9C1DD34174D49EAEB60CC
43F111FA23E52ABFA35E1A3495C36E51F8CB1EAEEA47D4ACB41240339380BF8B
EDC7D2EB6613A970350F585332F4B4F6BB4522100D1C532BE662EE843623A435
DD78AFFF27C36953FD5C3A6AF15715A774BE2A13ED5F26AE52F5812E09BDA3FF
76F5E7C3E7964C5FCB58C50C84A0F1A1C36EDBE675D131F249B38EC00D9C961D
5333C24DE489C30A86D280089C81EEFFFF012BAB847B7F750AC803A239F8454E
04B1FDF486C957> |
1420 <001C60D8A8C9B5EE3100BAD4757492EF04DDC5DDC47A18DB8D8AF55082
D6F039B7C5F09733B21C82CFA2D6FC5AA8E110A05E229541C02245607A687954
8EC8DC6D8FF406068E523BC24ECF6459262ACA3715382E355E313D73F7709BA7
CE39CB69806EBA3A773A75D9CDCE17768A82DEBCF224E375E0ED825994B699C6
6A99DD7AB9D7CFF139F2A529C70A7C986D4C12B1161A804CF03A97D19CB815F7
31DFDA1BB031E2B1051D547A7831E7EDF600651318CC03C5414A649978A0205C
4F819CCC> |
6615 <001C60D8A8C9B5EE31027CAD67CEC802B12240EA84FE047966011276DD
CECE77ED752D5708548F686280DED73ED022750643227BDEBDA9426C2D198CC3
3FEFD0DEC907091A3CA592C8744EC95318F95183A052EABAB14793C64614301F
7A302A2F81C050DF6D8C54C12A3D56302FD2BA6953AA4A3077100BEB52E18E39
028946FBA34F9DA73F8827BAD57EA7727F3DF87F63A659504300750F3A1E6797
D9025DA8DBAFDB79EADD94031802EB1C1CDEBBA0B5754116FDD2AC18DF1D3EA9
678EC8F16C527C436626C2F4B323C7957256B3C39579BF9EB39B81EE9B55E371
57C4E2EA452E615E4A9D65165D7D805D2704F0646CB9135EFBF13F19B377C522
0B9BFB7E272A616F8493EBC11D951741DE6142F3970667CE83DF592FC43AFF0A
77E87C647AFDACBE1926D4C00419DA926DEB8F775E1FC59BE0E64C3EC2176435
937C4E577E4EFCA23A2C429D7C25D48ADBBD3E8FB4727B20D6F1E2EF4DFEE9AB
777D27FFEFABCDCC3BA903974ABE25C4AC69B2834129DBEA80ECFA4C83BC7BE7
F53C9A> |
2150 <001C60D8A8C9B5EE3103DB78D3EA56D6230973C8E7FDF7C51DDA179713
23AB37F3939429E9D68FD39F543416574B569FD252836122D0D254958302B3EF
30FF87DD8C03DFAC3666F2D707BCEDCFADD25F8E5AEBB4955A228C9F31951123
CB2AD5AB1BE101072808E82CCAB088597C0FA6BE54F5EB84896EBCA537E67185
5A9E15D348CBD51F3043CDCCBCFA16FE36787B352E008A498D0E8F8ED985C664
09F0C35CC934D3285CFEC6213E2BF23024E08B0CECBEAF19D7349036DE96E769
1C51D2E43D8892A173DA0905789EC841070870E1993465A2E65787204FFFF8B4
5EF5849FEFD3BEED88389453244BBD2A525528BD65FB585BDA3701C2B5DF69B1
C0EA3C94AB4B59C713FF8E3CD440AF84B240EA3D22D15DABA1DCF5E9675DBCF8
B2BA300ACF90703AC1B9617E96D4F9A0B32EBFF20D8294C739> |
14125 <001C60D8A8C9B5EE310D43FF6757150EB88B59441CB3B0D3AE613B7C5
391E3F3FFA65E56843FDEDCEAFB55E1C9DD3B0E7951EDC23C1CC24E677B6AE95
C693E5DF5A9197CA907B188A17F238253869F92C1962B5784643166FF5CDEA4F
F4AF96D4BDE554A7C43EBA45C136D8756027257699E674FFD5755E735B0603D6
68EBEBEAD4992C3933C806FF3FB4320AC287AA38231BAB92A5B9ABE44EA4546A
72A7B47B97991B13131FF94F41BEAA647068522B68D7F5178F02DE4B6B3A93FA
47CDA2D969D01562BD87C8CD509CCB73AC3F2460F34B475A723B67386F4C4C37
8CB4D861E2033EF22EBFF6A0CA0F3B355DA84E2E8888BF39A63F5416AEFB7FF8
BD5997823F2486875DA24BA6E4DAF26224DC7DCF482061DD6179BE8FDF9B8951
2A1D89E29DE4A1D49726C3D40E4CA9D91E0F5A84DC8DCE2FAF3F8495208DE2CF
2DDF4FE4138310E062B09DDA8404D8065B77759FC320EA9E825DF40E040948B3
08ABA42E215AFA7BE207F7753E6FF2976662E5DF9C4BDB1AD35BBB9B9C41398C
4FB24014EA57D2645BE48336285E0E9E51EB1DE4A6B868B6C7B51ADBE43EA5A4
2D22BB3CC633A5B4662> |
3919 <001C60D8A8C9B5EE310D5C993945380ECFF6E5007C498C44FBC4919BA6
1966CA4B073AA4C6311BA32A8A7AEEAEC48B8399905DA89D9265CC3B063812FE
BBFBB767FAE7F20BA0955F02B607ED1262AA58DC979D72048953397868351603
9E38EB3BB92DDFD62B53A8B9514F84F1729045ACD4F14335EB60FB0796A0BBBD
0CE33B5546F1242B12C64D32CF1CB9E1D2BC785401AF74A61E52C5616AECCE53
B31BC791A570AE3781133798FB5BCF1E123778EF51AF11697480592F793E6597
56F1C99E8E5F575F3FB0378FE6E27865771267968AC83B19F1D4F400C4AB7C88
7E771279B07DB6E4F6AF8CF839C53757D82C73707ADEE39CE46E5A353EB61157
BB709801C22E39AF97C1B486966A157131BDCA7C0E4C8C8A4E0698E764804805
F5766ABEFA3EB9AE695955E34A8C65EEE0B68A6E65F155FB5DEAE86CA6A46FFC
C29D59D8B0B4160FD4E56DA0E45DE90E609D480FDF8BE4C86D1C1CFDDB167A2F
17A0A480D8B216776E8E624629DE610F028B4375B51D8BC70C4B8C87A6FDE106
88F5DB7466CECBB04CB62E9CAD6F0258055F3180D9E0E964B06A63CB85EE3306
501595702F26BF3F0AB16D1429A018C06C05D81120CE32D5F77F5C3C3CF0> |
2625 <001C60D8A8C9B5EE3102C0D7D28DAEAEA68F5143A0C6E2C14AB704EAA4
DF33CFDE18E81B16655DAED4A89F9A3CBFEEC23452770DC358A409FF6BF5FF46
C66D780C5CBEF9BC4F07259A60367B0B286BC8731E636F0CE812800DBDAE5B4F
0C3EEE974A5230A6649214687DD55F7F9B9B94B2C195CB88355E2FE0445E3DA2
664F31124956DCC9C05EDE22B2EB0BC5F088F1FAA1782D15CBA7CEA253155737
01FA2B0208B712D55E7C4A9277B7A65C4ED4BDC9F44779> |
11801 <001C60D8A8C9B5EE310250B791ECD09A6B529074A0456B818CCB1FDBB
0F71873041F7507E9ED74F886CB7C50FFCC899278DF08F68CCBB3998C12293C1
4A588D5034F9B7B21EF21E9E1DEC7F852B7407A8BCD7CCE1437D950FCCBFA2AD
EB1852F61BEBE22EAA56E4F8DD9F152C3B8C9D845A20AFF38B1C950F03420978
BF0874AD0B949A43EB8BAB7DE4782DBD10BD8CEEE993AD2B59C89F0AE2CC6B23
C210114E546FE6BBE0C7476D810DE2C02D6E01E58369A28AB06AEC6F141DCEC2
C00C35B37A2261E1644299ACD254360E3C7CE7B1710A9928F3EA56CACCDF79AD
82668086E196F67BF75F6DB5895AF4E3AD12BBDC26B23189FBEE810909418064
32D9AF1F20D885E7AEAE5DEC302AC9B8101EB12A5FB03218383> |
19557 <001C60D8A8C9B5EE31024D8C068264044B63E433DC83131B70D5E7694
80687DCD06B035E5DCB33F9043A2DE0B50722BD69DD12355B73EB53A5DB1C471
5196ABE85D58F7527E3B40DDAE152FF8AE41645F6B1193C947E3115FF54BEC84
57C39EC1E851F0CFC3671E876EFD214729664B3D96A02ACB8571DDB33BF74D3A
68748A5DA6A7AEEDE6BEDCDC42E392558EB58DD42626820C3ACA95CDBA0E7417
4997C57699E4C96F97AD8F6DD09962BD150D3F65B3CD40F10E1D393E7B553D7F
C1FE78966B7590ABC64F11650E1A1F49C7D56A631AD9B6CEAB70E034E0499680
1FBD816A363CE2F24B45ED8A6CF7A7437ED5BACC362CAF58AF5FE4606971848F
B46D9286D66168E5DFEFC7FA49D9C9F48780B48D0A985109E4532066D7D8ECF0
F8E3B483C> |
451 <001C60D8A8C9B5EE310D964EBB74CE9A9A500AE18690C8C4148E484A808
F07B45FEF23B5FEE3526166472C20998CE515825FA241314857D5E42821B04A5
5514F367850> |
8848 <001C60D8A8C9B5EE3102EFE282CB89CA292CDDA8CD1DA0ABD5F5BF1101
21A4A3754621AE9ED709ED6A2AD7634FD9F59619E41C031CEB699B993C6ADC19
3F407C93C782613F551B72E17887FC3E81B98112E866DDAD98BC492164DAF1D0
A90310AD07F9C13425E895BB209F0D19825ED66F44EFD13BBD60995451AA1DD0
8C5D7341DD7C3E625AE0D2FFB499605176084804910E2B68C6A5116893169E4E
C7BE3FB42C3629526CB0351E5D19801C59E158ABB255BCA9AF83D6495E425FF2
2B2A108952AF18C431BB6C0F3BA6551A8CD6DD88C6D65404DC4164465480EED0
9645325CD0A5B1DD2851467058540D74B9C4BE6A5220E7405200387924D6154A
58B3D4051E73675967829F1298E3F6D8AA7BF69F6C8AF1B8DAF9B4D69D9FD2D6
E075190BA6E75A552FFFEEE94F12F5368F5D089FA89392CDDCDF08181E4B0AE5
991112CE4A0E4DAC151D88A619F5A7A10879A85B4A59AD04090D3B9F6A7B51D6
9CEB4074D67D0E8B703D89EFC0F2A5F7312EE66737EA100DFCB584B4894880E9
64F1DDC2B7A804F1D50F59F3510C46DF6838AA> |
2173 <001C60D8A8C9B5EE310217113C3625C656EFB29986DF5DA3DB12C15C6A
BF6677F8EF15580FEBE6F21CF042524E5CAACB54E9AD342A6A543A29C3DEF5B1
B05F5DB1A2F4DA1D3863985E647F16671436AC83D76DC2D6321EC7E86B27C7B9
22A63B9BA4B56CF87C4AE56939A361A2F9A74BEF567004159C5B37715B176935
D5F5589F35595BD39C6E0AA1C54E237CE46F0F0E535B3591D77479C938301B14
FCAD020B08ED5321E95389D3130908B201B8FDA57DF958E55520BF689F117786
C2620B75377652FAFC7FF0C2EC6D3350E583B163254E923AE2B09B4376EC1140
60E236BF849017519808EB231AB8A531B29DC3E16A34716BD9CF241AFB7CE846
58C3793F991934F998BD0CA0ABDF4D4A16DACEA67AA646DF4F92EA8AECB0A611
8DF25253F276D12603BCC049D45372BFC6591F8FF0F87EEE025E6D6A> |
1360 <001C60D8A8C9B5EE3100DDA4DE71FF133B587A7820849B44EC06315597
25376E5C7E4E716AE7F0EE127F868B2474A72A4B051A1BF402C2A8986C5A4536
D3C9627562AB2D32B4686C13E66F59EC1ECBEB841C0D6B813D95DD45F300F427
EBA2A8B7CA2EA9E8F772E265DF31B525DCDE7515233F0CFC8A677C7C86261627
3DBE6C6A128A6E2D97420B711A783ACB60C4A33374F6202E5A6CA892CCE56D3A
C2214824017DE6752F9E5E9FB2071369D53830FCB23D5C4CFB9CE0E22C9D8F6B
0C0A01320E767981211ED95AD48862CD946C318DEB88437AC49C329412E68EF5
879B36C9258EE0A2527979787D941C0AE08CF664C82FD90863A5B78EFF4FC400
EE05B4BD91E1EBB8DF784998C95D1E9280269F8F466E2ECC91D8BC4BC842473A
E45B1C> |
6877 <001C60D8A8C9B5EE3100971C44830812DF4807E0EBB76286296164D534
8E98B7E2A3E633D4F394E995C22641E32A4A401BD14F848D79EB423EADB01931
8EF23AE3DEFF1CB2793B173F1602A2DEAFDFDEB3DB93915642419559742B60D9
13A2DC0B4BE94B7C96B3ECE79CA182732A7C8637ECF33DFE5BA17E12155EF768
2F859A93B1708B756442DB6ABE54FC34214BB9C1360FE83A051432F5E9BBDD55
FA7E9CFE0A4AE6FFB75C4A00407C82FB67FA4CFC0B6FA277F06179F76CE7B0BE
F11C155A65BEAA786364B80BDF948279961EEEE1A21A03984574077BAC115C36
6D5D9873C337F4B108D9157E6244AE26C4DC5C0E7FE80B51CE8BFAC839F40EC2
F97F58CA443915AE56A96390A1E0B3EAA5E9E3FB0313E140FCCC73DB2AAE3403
2B8770EC715990031BAAFB892742635F79DF6D96644731D3A96B9C0D7C76A1BC
FE467C482623F06BAA21C2F47DE0021059FA5E5A48A23F9638B569EC6D7768D3
2154ED537729857D35DDE68875422283F9D8808661A13AE9D16AD853BABFF726
8EA4807E79BE1318B986A248D40E3D50CD55E9F5FADF3CA29015750D5F7FDBE4
580EBD6B4B62C792EDC06597A8B50E78C3614A43DA5263764977020D80CB9B1E
9BDEF1A2DD1FFA2DC48CACBF> |
12665 <001C60D8A8C9B5EE310D37A09E63C5558BEA0990A9A3754D3966B184A
4379EFDF62E859FA4212B3E3B8CE8130FC1ECA4DCC6B8EDB26F8CEC31E7D032F
B8F03D5BAFED582E7518802DC5C88B8EAD37AAA58A6687E318861F669B6C339C
5B93A53557DF55378D17FCDBF3EC715E2E4C30A2504398B99F5820B3E3353E7A
DD0E73A4B68A226397D55DD8531C76AAE6FAE6F9ED51BC982263C2506FC74BD3
79161BCF0F73AD3788F675C79C3E126479ABF4EA25073B138777AE1769F8A4A5
C096CC23274F61823FFFCB73C1C62893458CC5AEE50A270237A6CA0F7F64EAFC
F007C0799973FFBBB8A3302D95B1D381BB37F801BF08574CAB6FCAEA038BA2D0
330B245FA2360EE61E27B57B609764B60BCD126CD108EA2073B1684B5981E0B5
44BF9C9B5AA786D04004160A2DD53F4A46D472B3F7C7F22C1AF90C167026BA57
9149C4A11D90E529FC215DC771B6D2740FE591C9BD20C143D41C1C32098B5FF4
00F679D0E86576F334FBBC8ED3E2E0F8577AA049501676D5EFDB3E1876A382AE
6124E1FAD5CD3BC2E768882954F21065AE3E9B2E0E8CE3D65E867AAB5E5CEEE6
22F02C9EDE3C01C04D36178D39D49F436> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-102.036 643.299 mo
(\032\375\005\214\012\274\031\327\010f5\003\035\264\002\310)sh
-8.07599 643.299 mo
(7-\017O\010k+k\0124/\375\012AG\377\012\274.\031LeF\0001\307\002\310)sh
157.884 643.299 mo
(\017\262\011\2470\037\001\303)sh
203.844 643.299 mo
("\220\011F\012\274\010}\012A\005P\032\3351y\001\304)sh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 12 GetGlyphDirectory
8596 <001C60D8A8C9B5EE31022230AF3850B88D91504376C790F0ADF1736A64
DAD638655A89CD74727DDAEA8F8D9F9390E135C21A6D70C78200E24B3B2A3D22
1EEF0DBD8F6406A7051DAA577F908B56BB6F3CF4992CAA5C6AF2056444F0FA89
472168DB92BA8904243436A8C55070AAC3DF5DABB480D8F11B0D2EE106067E5A
064A2095A93CD3B3A819647B0479EDBC8CE497746094143CDE1534192B31A361
734AC57614C2A854E290266EE1B1D86922C8EE0258FBE002AA05F1C297D59598
6E3D75AC24E6C41FC04844EACF4FD2D5876790B9DC15077BFDE5> |
3910 <001C60D8A8C9B5EE3103089C37F665D936ED4D54E2C6B70BDB4825233A
177C20E35CCC170F2BAC9D384549DC2C2753AC987B5CCE302B62310515DA2198
CCC775D066310C899BFFBBC1FD04B6440AEB0F7079ABADAFEBB9EE26F34F418A
4FACE27996186BA8DAE8CD71DC0EB2EC9A952D833A837083C571AFA360555320
A2B696E73929D6A0E8819AD0DBA2339004E1240EE4EFC98420C15DC3C7DB8BCD
548B7CE333D09003D971D03D02A9CBA48B4C17B744892BCE54225A53FF132F71
417AA4E5B08524592E1ECC6EADD535ABB432C6C6B9CF19836CC4E8C4D26AA594
85BDBBD25E596473706ABF> |
1278 <001C60D8A8C9B5EE31023EA23470A47DAD586BB1A5FBAA3434DC6F11F1
AFDEC7F2BEA41D4DFD3DF76AF98517876D62F8C763F5C7BE1C03A14B66EE55AB
157CEEC1DF25C5D89EF46330823F3ADDAF261024D2A7D246EEF618F830DCBD63
D2B455AE291053A4B5761D780A934C75301A4D64573D397A089F52559D57AD4D
294CA5B91EB706BA23C98934A6B462BE61AC3D9AED31A04ED1E19AA9DAB52626
642D263E24A96D648B8568D2FF786E38F2A1EBDC7CC3776810C06DCB28EBACA2
33028981AEBC3605172880491C16E0E7F7D06CB6BEA051977FEF24AF2A16D65B
442EA4B0AB954DB6DFF6> |
12347 <001C60D8A8C9B5EE310296A92A79A8656DFE29C763CF4E0039F6E2E64
BA358B6A368976A1ADA939015C652F48A51F24A87EEA92F46BA8FAB8E1617252
2D525DD8CC8892A53C8CBE743F92512B16BF8DFBC9D23067D742CD5A01C6E105
35BD88DA16E69C104BF70AD4A6E3DBF9920CC5320C35354079525B9CBFFF9B3D
CEB607C8C4275268378371ECFFE161A398FFD452EBADE275EA88429423171605
0F90DD51CFA05D53CDAC634E00FCCC0461F59C6CFCB6176CCE41657B21ABDD48
E74D47DCDCF2A8A87FE49B020C81B40849F313219257AF427A322184402B077F
893BEFDCE246C032C0DC13DBB45FDDFE792BC7ABECB8C04530E4F2AC17B868A1
2FCE5D2EBD7CF07175891E998F2EEE2F2F63E71B0E78F689B4DC2DBA989BE908
C3AB5A819EBB8C8EBF5C5891BC2A43F685BC17DF7353EFACDB6E9A3C44F30CA2
40D656CA6F9B8D63542> |
5311 <001C60D8A8C9B5EE310D3DC867BC3DB932E0CBF1C13246742967E14A6D
A4F9220818ADC9C456A06FC7060CF78655B509CFE8C533DFF18211491DC469E9
AA26D3EEA2F96A0EE4EE57803CD30D637B99B1B1A771D278E7714234D1F950A4
FE72D3778396050BB99ACF0223BA5238298A67496C18A0560AD775F25A91D020
9F7CDA3C5211ED20A768E43B7C480B3407B68AFC21F2BF4292312DEE83777BD5
B461D4FAC2AC1AA862142A0413BEB136039149565FC08C4AAEF037FEBB0967D1
8F5DDF00A15EF448CF15AEF37A258E797B254276EE8E7EAFB6816D1E652DC758
1676DDF6D6BDA9D35F3F725E9ADE9A1CB733BBAB9E7BDAF8A38EE2C40717C154
65EFDDA0AF1D0C9C9A8D098C17B1232BBBE4B0C8B6B57D> |
16386 <001C60D8A8C9B5EE3102C0D629A251121542E95D3C21E6D5FA5E4500B
66E5DEEBFE713F8775DFF706ACEC795302CC45667612244148DCCFBFF810C00A
4DF9E8C38B51D7FD3CBFBB1D1340AC0CB26A255590023E00325D9530F0CEDF9B
05D0032B99913B80F9810C50E99B836034B028903649C6DB52E58C257E530A28
D1108C923310DA635078328AA4A5523FE1B9D3D1499C5A6A5B6931F91F8D6DB6
19861394BAB87D1B92ACE14D32E7D971CF07C6DCF02078E9FB94C998533C951A
367484AF37BE3E9865B314A53662903129113B6B8C2A8CC7AD58411B37430AB5
F34241608C06C0578CC4BDA681A5CEE61D66CED9EC8795AE3721992B048DCC40
F4C3E66CA0945FD1FD5631C65CEEA960FED03E97E7BDB> |
11579 <001C60D8A8C9B5EE310356A795C52BA2CE0D43E3F27E5D41F02A24596
624C8A694F6F379406A0646461B880EA09AFD2D1A441DD9A814D194BDAC5D87A
E370236C1E1FE3BB8F458DF9A89F60467ECA8ECAD16CC05A5673FC785B446E5A
CB05A29FCDAB72E686E541E9008ED3095B50F92EC88EE09EC4308BCDDE2BA779
6EAA6EDACED895D6E5FEEECD8BD5AB174370631F62F5DAFB9A726A9D9F0AF598
DFEABAAE727E89073F9D92AF2B76C2FB34EECA1E735B59E156E7F483CD5D2108
61B0E807AE6650347F053BD511976FD99B978BDABA4A82E36F6B650B9D60F56D
AC9BF82E83915E37CF528B5F2095204321F57A724634D19ADEE7F9B0324> |
11550 <001C60D8A8C9B5EE3103A4C2D7C461721C78AFE1C1AB17123D11B68DE
B022D8457E35967576983A838E4BBE3CE9B2B8B8A28BE49C4CD02E83432DE2D9
1FCE1B71CE5DA533B38E7E64F96256D3F4E1C82481C3BBD780A76C8202668B08
1EA0852865812517C6C41893243E3E866E3F4A9427F> |
13583 <001C60D8A8C9B5EE3103EE1893EBE3A1CF46FEE4E36245125685CD2AD
BD4AA74EC17A0BE8275E40CE3830DC4E5C42B65A3791506BCD555048AC0FAF1A
2A4F6C9277E0F2E01E7358CBA2A493C845614B4F3B4C74E41E2957F0C7FE3996
A97C89ECA90F6CDFC20E13FB7A9986E905800034716852930B222044C644E4D9
4972DCA5DB88EC58714FF72D23B3EA7C4F9ACA39846B7A58405CFB350D40BBDE
7E3752A643FEC7AB2E1EF777F140EF4198246EF02DC72E09A33075D9A82A2CB1
535191508FC5D976D561B893EAB027A08D17F4CD74CB52BA716ACEC771631ADC
72C9F2863A8A4315448A830A9AFFEA3383ED764229A4EA353D0BBC8B81D98F66
F3260F92A39AE5BE1D8D1531F53E21281171A9569575C9D4D493A4AE3D968C93
C421C1DA8A1FD6923951F717F24E35F69454DA3354FAE76F1E3C34942D525124
B4ADF5522D7D563B6B167E346BA535C55EB45330190E990D02656300C3379E08
2E7E65CB71B5B11BAE954A0F7C64EF93D4174EF9913FB9DD658290A6AE7A9318
FEC13CDCD449747FC221DC9923ACD8D2480F1886EFCFD63FC6CE8800ECCE20B5
A35A61B2F587134D6C3797274C14365AF41B4886C2A7246B433E6117AABBED45
A8D576012CB8CE07C378DE12EC2> |
3463 <001C60D8A8C9B5EE31036D2478CBD6273F3C01A077B79B04CFCE186016
E6AE5C0B4D7233B415FC23E4A90A8C8BA54F3B6F5F13512D8FAE7D93FAA2D95D
246BF6F07C04D1150EA08583929BC089D5F8D7B627786CC8ABC2C0CFE6A3A599
01037040627E1E12715D9BC9E43834EFAA956A13A116B6346DF9081C00B15020
8DD292787E9121EDB236DB0DD118488DF62B9B9884B40BAED9DA36A7E73BC0C4
71C75B917BCE1F6A9BD062E7781A2B08E79DF872893582188ADC5FC1C202E50F
E54BFDDA05341CD4121680966CA14D2276739D8B728FAAD7062E82DCACC7EC60
9C69CE2FF9B676FB62C7BB2ABA38D60EE15B1314A1C355BECA8906DE28657E2F
DBF44B072EFA111FBB468526> |
1131 <001C60D8A8C9B5EE31023ADBE237D51363B8A3681BC7A5E8B7EEF96508
114B4692F2A5CD6F21CF858E4AEFB1CB5FCE2EA6E5A9FE84AC4716D85C65995D
6D1D0108B60136F6BCE6323AD49E3CDB75882137B308A2F6430962A45159A082
024281EC51842264685BB8D59D22EE277A5723675F1EF12D9210A98964EC6F79
50DFF9BC9BCBD61E29B2EF811CC0A1EF5A85FCDA3E86BC35E8AE> |
16305 <001C60D8A8C9B5EE3102E391E92D6A22A1065EC3B1264E56F79C659EA
C99C781D55B01B36EB7C47F17B7F98984C38396848DCE8FCA6DEF7AF2B5611EA
DD3EA0E67DAAB164CB204EBC7FD658C519DC930F60ADDEABDF5257361368045B
E942C78CA18708708E496829F867FEA17BE52AD1978ADA5631997D42A5EF32FF
C08B70BECB15E8FC34D91F236C118E76089EBD8A664E71D5704303B5F78D3C5F
D57F89D2D440A4A386E4A76250B05EE302A3B369F3AC52988214FB8F8A3C2E3C
85CC5BFB0E12427F605D345754182C52DD62324C8B465C7A1EF94D372ED36CF1
68252089F9545DCAF3BC45DE0DAA526188DF2AD7B76A559BB5A05094AB4A93BB
E7A6EC8890D000C3A7E917224C8475CC8E7A0F5481FEEDC1F1579376F92B8D14
F91606E101720F56BD98A9ED5482FDCECF3E2CD0B84C1B8A44043535B7C2A> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-102.036 665.259 mo
(!\224\017F\002\310\004\3760;\024\277,\264@\002\024\326\035\225-;\002\310-\036\010}/\2164\3775\2015\0143+5\017,\264F\0001\307 Q\015\207\004k?\261+a)
[11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 
11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 11.9952 
11.9952 11.9952 11.9952 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
236.844 665.259 mo
(\000&)sh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
247.824 665.259 mo
(\012\274)sh
%ADOBeginSubsetFont: HIBBAA+TimesNewRomanPSMT-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HIBBAA+TimesNewRomanPSMT 1 GetGlyphDirectory
51 <001C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF8764
58925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153
D7D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E8
86C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18
CFB31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF1
2086F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FB
C628> |
!
end
end end
%ADOEndSubsetFont
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
262.824 665.259 mo
(\0003\000\\\000W\000K\000R\000Q)
[6.67438 6.00238 3.33838 6.00238 6.00238 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 1 GetGlyphDirectory
16925 <001C60D8A8C9B5EE31035E33B5993F98455C6B98C8F63889A5785AF4E
395E9F72297C2FE054385BD21A6C5B724469F7155FE0ADE4A27C9697347D9953
AFFCADEBBA1364968DD24654E4473F9454AE25CC0AF15C7B99361CEBCC8C0A42
0DA1B92C480DE885CD914AF8F702CD01FCC71D2B4CE50F8BB73FB32EA2A68C99
CAD73CA4DD4BB4F8F8D3ED0AB3497EF8560822E245EC9D299EDED7E1B0E3BEF4
2D192319DB5FD6ECAFE7B69129419EA7CC3D5BCF390124049368365A812E2C30
81EFBA747A860867D46F5B8E4090F5986467ACC84FE0D2682F5DA2A185A5D8C0
AD478048AC9385A037E797E14BC3C34292ED7F94C17E635280B38824C2ADF5A4
5008553E461D07E35B608C00A5BAA63C78CD91D019652272229ADFDB58C64BC5
40FAAD138F56A55D02DDAEFE8659708> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
299.844 665.259 mo
(B\035)sh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 10 GetGlyphDirectory
16432 <001C60D8A8C9B5EE310207FBE9E9B4A56EB4E4CC20F15BB0AD0693B5B
80A941C27CA2A788180A1F95A60725E97B3E5E97C721D105CF6CD0DDB38E55B6
51ACA43D31085A27C16D5A9DE3732AD964ADAE1AB5A5A514D1D10EF0E1C969C9
9F147FB36FD9D0152C1EFC6360F8066D3A5A4CC72D412F252E463647879F0D32
50DF3245C2ABB8809AAD5CABE83C767B993A1EC4AF9706AD64EE97F0A71ED1CC
C5F2B9F4D265A8E914B65D3DF5793142FD1C2E1232846526DDB3B8F5BD2F2F50
524AF1BC6D0CB> |
6256 <001C60D8A8C9B5EE3103469148BC681D4E5138B04AA48188D5BCF39A30
DC36F191041A6C6C768EE32777AA64B9E251C793E994DE5DA469B44FE1984B53
3F41C1227F59251FA95A1793AE14F4CAD998FBE3BE6E4C2D4CA91B1FCBD7D5AC
86415EAD6E80F50F92376D16AEBEFCE8844B17B8F4F487AD076F5AABF123BC8E
2AA95CF78348D4A3B3127DA51EDB3CAB582931DB9997F8C9F3137582B2647774
E3D06DDECAC20D3F2C357B7C431A64B0A415BF1607A82CF1613909DC84992616
50E1C9EAE39F513920A8F414EC20B22BE3D2351ED31A563EEC71ECD5770279C8
D9F6EBF372519B80EEC637DF7E2BCB> |
13638 <001C60D8A8C9B5EE310342C9F375357C900DF452988A54A99E0E2B60C
4E781A28B227D8DA662A03A4DBD3E41C0714EFD0C136F91F0E0F97213FC8F03B
83663BFE29B5123E15D9F9332D85A485BBF2CE6BDF9B6E0AAAF8B335DDDB3228
510E9B80AE85F90ED8E345B8BC2FF88116AB7406327B3A103A12C6AF9B6D31B2
250A9E7093B168C69EFC667D25B2F8C27F5C232CBADCBD30B5008E59E8B778B4
B54E54B859A4467EC20CD6037B943DAA3D8AEC5C1838E791D669E5F95661A66B
AE5F74FF7A9EEAD8951E6D4BEC2780A0D084C9E8983E89732D9DA33F93204296
BF1B21FEA144611C625E7FDDBD435176423BE0E6A7ABA9EF88D74E4B5B6CA7B0
5FE843C660A0BDD44531B22445223214E6A70F1B7BE0521B66EACF0153739B61
840B96584105E77107B12C90F5D9769EC3FFE359331AEA1586BE23CA817F3D21
10FCC6C86A39410DBD24C1D0A718ED1F2AE8998052A4BD5C415887E4E931CF58
B34E50E7DF6C017FDD945407B4532DA85FF0BB0F2ED5FA5A680C97C641D37999
4B5FBD9F0EE268DF5871614919EE1017B4E71C9368CA6302853BC41E6BE2E62> |
1993 <001C60D8A8C9B5EE310366CF86B17E1CD9CDA90422AEEE16CFD44B19C9
80200DD3377F6A6F02B5220A74BAA755EA22C960D508F2C14F39AE91E35CB4D2
AF060D10C7D74917C3EFCDD7026FA77D0E21BA8A20F6468A7CB4AF0EA156E006
9C0100899761F610EF12D9AABA0846C9F5C088BE7B05A21F65B31F2234BD2775
C016D0B2F0207100BB9EB786AED0DC379EB31DAB104CB0DC6EB302BFAB879811
E46BE89665379D160E5792DF987C69EB64DD9CE3ADA33EEF1D30969070B92A58
A9DCCD5B74F786241F1C2D869BC29C4C5C90DEE4E7F3955F90692D9AECA0ACE2
DD30C3531EBB5046A088FEBC33A2B020> |
4531 <001C60D8A8C9B5EE310DA622C478475C040D65FEE9CF8360598FF81B2E
998E2C6CEAA86FF8E311A83FC485B342BD28C483B15FCFD9F40CE375749957AC
A9A92FF34E26D59E72C99D3E1AE7DDD780BD64BD6636F5A345D34268EDC64C22
3A2CF812FD5EFFE6AC13529A33CE16949ECE78A5A82D4FEBAF494F010F3C793D
CCE295DB03C1B6F3C30E0EEBFC00C0C9032C275C71D598B07AE04432D7A3EAC1
7EC6BD026567B509A198155ECF1CC3E9EC1C9169E13545629D191DFC038B3A4F
25899474A9C9C15BC856DD70E5390E3BF3B41B847588BB961E1D8F0A4C814405
5443CD9401056C82CCB4279EEEB6058CBF9907372C8D6E45B1> |
1308 <001C60D8A8C9B5EE31027B724B619694A8CDBDF7EA6CA16ED0ADF70A9A
21613C7E361B109977C883E1756A3DA5722E41CA43469797C02FF3926F684D5B
6D4B9812C45C4601843F0D2EDBB081D6005172C81FBF36278BB75C3EF2C34821
2320689899727361D9F095925463C29ABFE43E51BE6D6D74C887DDE8098F3273
12B4229FD706049C9B20AECCFEA7CD6950A0378D2985DC2CC28DCB3B90EC5302
10DCB0A706C7C223EBEDB399CB415F934FFE4751257C4FA2332FBCC091ED8755
5CC87C43FDB0740836CEEBBBCD440EAD3DEF51F74A86DD298F662D5A7511E150
5FA6CB792E5E> |
1167 <001C60D8A8C9B5EE313C0DDF0856FBB3FC19E802077BE0F4302EAF4EC9
56793C17E0C0E2F2057BC6070210E268FA184E39A084F527FBA43B97EF6A7377
7008E3BF9D70ACF527F073FA3EFA47C38128F4F852C41D2D6FA2BF4D67BFDDA3
9B61E0C72E0B84BD60E24279A618F55B49A28B3020C2CDA448E3C2E07DDACBAE
94D2AEA4A70506F34DFFE7D2C230DF69CF3B4B1647537A5610FBC4FAF4755B1E
24C9EF3D4CC3846443A3333734A1BCD4CC0BA092F34B14B8A69468B0FC88E46A
4C0615C209B74922448486708D13AA933919C5D82A617AF9> |
1301 <001C60D8A8C9B5EE310D75AE6FA3AC6BB68830CC4DFB00117FAB4B5A60
F684ADB4000CD9B4580BA16ADAF9070657EF119341B0A12FA95015864F64341E
55FBE3899A67C6BA03A3C36CDDC728D5ED33A9EC5C5D5F8E4607F7FF21AF7156
A7F9B08FB620078048D0983243083A0703C24A49C4622544896CE85B0181298A
82135C65791616F001267FFC8D0BCC312677FA1EF3186803A1BDB936017FC159
9B1A3866E430D18836455A1EBFE0B864866D96BF57B4EC84061E91FCAD4C7C70
D8BEB5D283B3A506B3470A5FF834C68E14BE55B3B503986FF28DFDC89D39F438
5DEDAB6ACB> |
17820 <001C60D8A8C9B5EE310DC6E8DAA62C5418693F3C08D26AFE71C934E9D
DBBC4BC290DA1FF12C9E830BA77670BA4A0204A9876598B3F8128DEF2023B360
0ED6D39164A05AD831C9841AFC67940C1BA7654287E490D638AFF8D4B7800DC7
E86BD5F59A6006538367EA7036C733162B2629A4049D3B3ED5FF36314F821207
0918717BACCB702EEF532D545A55AF00BD4600807B00A6B079A3C7741379FD12
3C0DAF1246B9D6AD8E8D2D8E3A6E657777F443653DF45BAA17E5E38AD4A181D2
04754DB86D8583614E6AC32DE618DE6914B77C756C9C4B61A4FD434F7F2B0661
34F5BBE4D0791C52037D63974B4239DEB021D9B41EE3AFF6F60C89621EB0927E
9EF8A0E14417B6B5B3C46E52EF0220D42DDFC6A54679C0552FEA09E73E27324B
10DB40113BA344355CA5F7D134418C1A8CEECEF80B823C587BFD22AABBA3D6FB
6D19B4AC4D9B2ADE6581A56D2FB113C7EB9C39DDECDEFECD4E3285578DE59F1B
85F43A78BC608> |
6546 <001C60D8A8C9B5EE31035E3C7C16180BBE91C96B655B1B13BED2529554
0AAE16827795D6BCA0E4ED265C66422C99E789D3B86FCA4A41CE66AC189873F8
567EBFD4AC87FCF81488B0F2EF0BBB220D2D2B5B4295286E9CABAF64A164FE2D
6069D9978396462C5DD6FAF31C4C970E65D01F51F44B780C83B4DF9E81C2B40D
CF13528E4C4961BAA760356B3D1E9034E4FC1F5C9B4A9E45773F62747676BCBA
546A4DE7F5C7951ADBE435B3AE5C7476597085363988754D0C424FA82057365B
DBB326A258EB8E56583F7960E1BDDF9FECFEEAD474369B55EE866C066D3CF7D0
5907848D1B580C441DD284294CEDEB14EEABE4327C06CD13B6C4461582312C3E
B028941F765BA4CEA26D336733E21A834F392FA772BC723289C11C65F32A5DD9
B3CB1F084A9EC2DC8C4CBCA08D55B2C890963BD80C4396C1821E7192EA2C02CE
8FC9B59A88237BECD0D1C5C744> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
-102.036 687.279 mo
(@0\030p5F\007\311\002\310)sh
-43.4161 687.279 mo
(\021\263\005\034\004\217\012\037\005\025E\234\031\222\004j)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
55.584 687.279 mo
(\0000\0006\0009\000/)
[10.6536 6.65753 8.64954 0 ]xsh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
5154 <001C60D8A8C9B5EE310D43FF1CDDBBAC4E8AFC74FFBAF94A184258339A
805AEAFCF9C287305BA367BDD985643194DF378E235AE5A910B3ECA70BDBC511
33162BB61616BA1F52D2337E9A3F6CA5EE51A098F0D220A8E86654476D3858AE
19026CC731AB1EFFD7A4A759E22C565270ECA9E067263F145044A4786957A02D
6238266C3C02> |
7481 <001C60D8A8C9B5EE3103A8976BABEC5B9C8FB8D09F7CF58DD37A569B5B
7A052DBCD016EC9A3B53E0B44C47F85DF90DFE3AFF5752A1394F6C42DAD47C95
C61151C08B729A9F4D1F2829D9327A42BD3BB29BD61CC5790B5624CBF6F37972
4032E1E86B2B80DE591C20A233712B2776B8E4CF26704274B6BD89C0C0785B7C
08FE45DA9B0D3F87A51D7431C9182B19F04C842BC08A024693569CAD293E825A
0AEABEDC9F5AC72485873E6DE5C69C6A889607465A9F82670E82C913A478> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
91.884 687.279 mo
(\010-\033\240\001\304)sh
126.504 687.279 mo
(\024"\0359)
[12 0 ]xsh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
153.504 687.279 mo
(\000&)sh
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
2581 <001C60D8A8C9B5EE310286927B075CFA90FC90D9CD26C4C5E609C9C4A1
B94930B3415A31202878C8AE6D63C16E75A6EFB1110F634122A063110FFC6DB6
AC0605CDDB88087B17E2E307D3872982E2D5630239BCD5C0D92D5E3C1587A5D2
600404BCADEF4FA14963C240A620BABDE33A5E3E8F261D3760C033F1CBF98CAF
7C1BD372053093B2CBEE203E18E044BD6E2BFBB59905F3AFB7AAAA9F0B8249C7
BF2B571E063DD9B81393BE177F910AB4956DEF2660DFF9D0AAF5AF1C6DDE2FF8
EC> |
2144 <001C60D8A8C9B5EE3127F1A26D8102AC97454C099C0604BBFC5A87A1B8
03056AAC8EED5559C147F259F291F2026576A69FBCF5512465B42369E5509678
1F78635DE188B0BA6860812FD176D4444AA79CCE882E1C632D2D3C37B322E4AC
B203B68B554DB899C81B25F026EF52E2510D6636AEE02E5923D41D167D7C4484
40C92F77B6F5B1ADFCDCC15690BC997ACD7C18319129F8AA027BCA9427370F4C
8F1C553FEDBDCDF5B791C551A37270649EDAB160A0E8AB3A1BFD65B6CB450758
4A78426858059C3D40B74C42A8163AF54C3C27434724A3C7364081D8F1889B8C
0B56909CBDC18DF9C30F05FEC8157C771F8FFEFACAAD0EC9F0AB498361D13F6A
EC31F343E75882FECDC0C5FB36B4A44F2EAD7AD628AF69B219D23BB55BCFC689
58AC14F92A3B9298C418D4BEEF474E25> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
164.484 687.279 mo
(B\035\012\025\010`)sh
NLFCZJ+TimesNewRomanPSMT [12 0 0 -12 0 0 ]msf
203.484 687.279 mo
(\0000\0006\0009\000/)
[10.6536 6.65753 8.64954 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [12 0 0 -12 0 0 ]msf
239.784 687.279 mo
(B\035\012\025,\264E\234\031\222\033\351)sh
14.064 165.219 mo
8.60402 165.219 4.16403 169.659 4.16403 175.119 cv
4.16403 214.719 li
4.16403 220.239 8.60402 224.619 14.064 224.619 cv
221.664 224.619 li
227.184 224.619 231.564 220.239 231.564 214.719 cv
231.564 175.119 li
231.564 169.659 227.184 165.219 221.664 165.219 cv
0 0 0 0 cmyk
ef
.75 lw
1 lc
1 lj
10 ml
[2.25 3 ] 0 dsh
false sadj
14.064 165.219 mo
8.60402 165.219 4.16403 169.659 4.16403 175.119 cv
4.16403 214.719 li
4.16403 220.239 8.60402 224.619 14.064 224.619 cv
221.664 224.619 li
227.184 224.619 231.564 220.239 231.564 214.719 cv
231.564 175.119 li
231.564 169.659 227.184 165.219 221.664 165.219 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
10.704 55.059 mo
7.04402 55.059 4.16403 57.999 4.16403 61.599 cv
4.16403 87.759 li
4.16403 91.359 7.04402 94.299 10.704 94.299 cv
225.024 94.299 li
228.684 94.299 231.564 91.359 231.564 87.759 cv
231.564 61.599 li
231.564 57.999 228.684 55.059 225.024 55.059 cv
0 0 0 0 cmyk
ef
10.704 55.059 mo
7.04402 55.059 4.16403 57.999 4.16403 61.599 cv
4.16403 87.759 li
4.16403 91.359 7.04402 94.299 10.704 94.299 cv
225.024 94.299 li
228.684 94.299 231.564 91.359 231.564 87.759 cv
231.564 61.599 li
231.564 57.999 228.684 55.059 225.024 55.059 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
185.364 239.139 mo
182.244 239.139 179.664 241.659 179.664 244.839 cv
179.664 267.459 li
179.664 270.639 182.244 273.159 185.364 273.159 cv
225.924 273.159 li
229.044 273.159 231.564 270.639 231.564 267.459 cv
231.564 244.839 li
231.564 241.659 229.044 239.139 225.924 239.139 cv
0 0 0 0 cmyk
ef
[] 0 dsh
185.364 239.139 mo
182.244 239.139 179.664 241.659 179.664 244.839 cv
179.664 267.459 li
179.664 270.639 182.244 273.159 185.364 273.159 cv
225.924 273.159 li
229.044 273.159 231.564 270.639 231.564 267.459 cv
231.564 244.839 li
231.564 241.659 229.044 239.139 225.924 239.139 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
NLFCZJ+TimesNewRomanPSMT [9 0 0 -9 0 0 ]msf
193.164 252.099 mo
(\0000\0006\0009\000/\000\003)
[7.97952 4.98242 6.47644 5.58173 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
196.701 267.822 mo
( Q\015\273)
[9 0 ]xsh
9.80402 2.01898 mo
6.68402 2.01898 4.16402 4.599 4.16402 7.71899 cv
4.16402 30.399 li
4.16402 33.519 6.68402 36.039 9.80402 36.039 cv
50.364 36.039 li
53.484 36.039 56.064 33.519 56.064 30.399 cv
56.064 7.71899 li
56.064 4.599 53.484 2.01898 50.364 2.01898 cv
0 0 0 0 cmyk
ef
9.80402 2.01898 mo
6.68402 2.01898 4.16402 4.599 4.16402 7.71899 cv
4.16402 30.399 li
4.16402 33.519 6.68402 36.039 9.80402 36.039 cv
50.364 36.039 li
53.484 36.039 56.064 33.519 56.064 30.399 cv
56.064 7.71899 li
56.064 4.599 53.484 2.01898 50.364 2.01898 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 3 GetGlyphDirectory
1944 <001C60D8A8C9B5EE3103AC518EA4913F7CAF71E5C1BFCDA490B9381D4B
1C4357862AFC645EBF584B05EC2EBA79A70B710AC5B984F41789E888CF832D5D
0D3827F8A9A0ED2E9E80B718F0CC55BE9F367AA1CC0D6232FFD1DF0B0D089570
B87304D9ECAEC7DD7A39E458BAD86CEB833438190A22E2992CCA348EDA0EF97F
CDF6BAD49B4D4885D646A9297E44B337ED90065D16F9B53B0E59C1452B616215
DFB647145DE0387A1019D5318F2BFE66A7FD96E4048F956044991AE8F002> |
17934 <001C60D8A8C9B5EE310DFF66643629B45D90D0254388B977806EE3672
C1654E23B86AE0A870E112ED6182F8DC228B911C66FCEB0644C208B6747F89FA
C5B961A3DD499735C333B06E23D3B81E07A0727A6B13910FA87D6924B5BB3156
B5B2636FEA661228049661E254FE8107FEE00F237953E7E0CAF6D97D270142A0
CC90247626183F1A11349F721EFBE279E95B32CF2873DBDB68D91DAD924E69E7
E4831FB74CB99605B59023632A433A737C9F41AA2934098D05CB05AB4DAD134F
0B41F81B0E3C4EFAC1C28522F2F6E3454F297E7CD6896E98988B127C3A3BC1CB
473042DA6359DF4AFED7E101D9A5CC675A2960A20C4287007C37CCDFF5D4A4A1
635E503C2AA70F52F5D34984758C714AFB22EE1F5B648F2B2B55FD83056FC44B
11D3B6882F9D17B8659AD8C190F9706F48B14E6314D5916839C08B66D8414623
10DF2EF87E4E5F351FCA3CC6EDCB3C795> |
6613 <001C60D8A8C9B5EE31020F8CAF3CE6B16995FF84ED8E53CF9EF4BFA580
AF9E2759501B9984095640B9C8217DD6995E66ED5D62891FBFE30D086DFF0E9D
1834D16C070817EAC4624156578458F6C1AD21C7DA8F21C7BF7143D37FE48837
92E352C2596EF2367FFB049B9ACA329899DA34EBF06C400D2FE9A592E413962B
ECEEE8E793C3FB45340835AC8BE77D08B2B92DB9FDA6BAE507712273FB8ED491
BEF8944704C4EB45F4D46C854A689D90AD1ADA2DE279F1083A00BD9688E5445E
925AE5A6B74FF8E4151653AE6B04977AD8D732BCED601480D125ABA04009F78D
C2831EFBF5041392D2E67A142E6EDAD20819DDC2000D22BA42A7945BCDC81FB7
9AAACE4CE4D82FDB73047C2188629C3668684361CB56D77D03A1E2E2D02D7CED
2F269F3D39654F7B925DDBB7D37ABD52BE5FECD5A680C8223E54A37D0368471D
DD6A6BFBA370FD76695D9CB2B89E62095A7239A18B9FBF643F6DAD20FD63EC11
0022895C6C11A57B19B5354E5267FF7FC36D117037E882884517E40E85004287
6456F826159047805D7FF202CC626CE9AA8ABEEF74CED354B73B7AE997BC4BA4
737FA77B3439554BFC80C5E0A2BF9FE4C403D6D72CF2CEBBF679C65BE9EA042A
F783455FC6A9062ED6A6731C25D9568947105B17DD233B91> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
16.644 15.495 mo
(\007\230F\016\031\325)sh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
43.644 15.495 mo
(/\216)sh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
16.644 30.7584 mo
(4\3775\2015\014)sh
93.924 267.159 mo
145.824 267.159 li
145.824 248.679 li
93.924 248.679 li
cp
.531456 .446387 .445167 .0943313 cmyk
f
91.944 265.179 mo
143.844 265.179 li
143.844 246.699 li
91.944 246.699 li
cp
0 0 0 0 cmyk
f
0 lj
8 ml
143.844 246.699 mo
91.944 246.699 li
91.944 265.119 li
143.844 265.119 li
cp
91.944 246.699 mo
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 1 GetGlyphDirectory
13556 <001C60D8A8C9B5EE310DEF4F5EB75B79AB24AF8FC99E63EF5902AEA96
A5F6CE457E6C563360BCF879222D22D8214781E61B21715A15EB33F6B17289DE
A105D6A28CD6A17BADD1AC81D1FC320E707BD70EFC7E402DA3D1B5524570BA76
466E559B5CC00C440DB7609570A60EF41AF1A36D560E42DEE661121F156F1E25
7399E0CB34B6885793485A3874ABEB13FB8E4216D529F7BB5B1C023DE50D9A60
E8C148334C77A4AC09F47E3B0B0BFA8BF450C0FC2850F21D8249C2885E0EF378
C44B954F4BBB5B9255687AAB40FC21870038DEA45505B8B40CE565531A9E04E1
27F5EE7BA56E55D7B25F894ABDB76477416EDE8DE72C3457E7A29351FA80DA7D
00A0C21807D06ED54277D3C954BFCB4BC> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
108.924 259.179 mo
(4\364\0128)
[9 0 ]xsh
93.924 38.079 mo
145.824 38.079 li
145.824 4.05902 li
93.924 4.05902 li
cp
.531456 .446387 .445167 .0943313 cmyk
f
91.944 36.039 mo
143.844 36.039 li
143.844 2.07898 li
91.944 2.07898 li
cp
0 0 0 0 cmyk
f
143.844 2.01898 mo
91.944 2.01898 li
91.944 36.039 li
143.844 36.039 li
cp
91.944 2.01898 mo
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
108.924 14.4987 mo
(5\003\035\264)
[9 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
2102 <001C60D8A8C9B5EE310D75AF63B60288AFC61718C33D937C59FD52C538
7DC7497B6D961E924C072228906B490758BCBF3A18F3D1F460C2952208D126FD
7607984F52A10736DF35BE6CCDCF0E6B0A7867C876BACEBFEA20A2FE78DBC64B
288043128B5D9FA3F0126350100122362D646AD98C1E4C95DC85AAB11B3B09D8
508CC69F532BD2AF487FFB2B92CA3E16CCE427D0A912BD976997CEDAABF086D2
937625AF1CB25A9C4AA0804DCCBFCAA101853E4793C3A8CCF272C42D068663FD
F48F464BB179773B0A79515CD4CB2B2A40A193> |
7616 <001C60D8A8C9B5EE31035E94EF5B26C5A242CDDF2B36C00BDA0E8740CA
627D8FC6C48836B28BDF37FAB281BE6DE0C9D63548C542B52AA21164D1405338
87519DF86A79C82963D8BC0EB3E74627E4C464E3F00C47A8797F82958FEF1B24
935DA9EC1F7522571F5E4AB5D19692F4F4BE04363896954F123417D1534D2FA6
000306F9E3775B73D9A68F798FB40C245B69E15A2B1C42F21C69970D9BC71DE4
DADC779FE3197A46FCF4175B530FE83E71F1A91CD0E442C1DD4E36480CB5D9D7
7AA3C642E6A2617129FF8F9221749833D51B090846CAFEB8FB290BEB64BE993C
D0BA314593011C30658E997070DD1D0116137D0CAD47ABF214B468A74EDDDD19
CC> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
108.924 30.0957 mo
(\0106\035\300)
[9 0 ]xsh
23.664 178.119 mo
20.544 178.119 17.964 180.639 17.964 183.759 cv
17.964 206.439 li
17.964 209.559 20.544 212.079 23.664 212.079 cv
64.224 212.079 li
67.344 212.079 69.864 209.559 69.864 206.439 cv
69.864 183.759 li
69.864 180.639 67.344 178.119 64.224 178.119 cv
0 0 0 0 cmyk
ef
1 lj
10 ml
23.664 178.119 mo
20.544 178.119 17.964 180.639 17.964 183.759 cv
17.964 206.439 li
17.964 209.559 20.544 212.079 23.664 212.079 cv
64.224 212.079 li
67.344 212.079 69.864 209.559 69.864 206.439 cv
69.864 183.759 li
69.864 180.639 67.344 178.119 64.224 178.119 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
30.504 191.535 mo
(%\360#k)
[9 0 ]xsh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
48.504 191.535 mo
(\022r)sh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
30.504 206.798 mo
(\021\200 Q\015\273)sh
97.584 178.119 mo
94.464 178.119 91.944 180.639 91.944 183.759 cv
91.944 206.439 li
91.944 209.559 94.464 212.079 97.584 212.079 cv
138.204 212.079 li
141.324 212.079 143.844 209.559 143.844 206.439 cv
143.844 183.759 li
143.844 180.639 141.324 178.119 138.204 178.119 cv
0 0 0 0 cmyk
ef
97.584 178.119 mo
94.464 178.119 91.944 180.639 91.944 183.759 cv
91.944 206.439 li
91.944 209.559 94.464 212.079 97.584 212.079 cv
138.204 212.079 li
141.324 212.079 143.844 209.559 143.844 206.439 cv
143.844 183.759 li
143.844 180.639 141.324 178.119 138.204 178.119 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 1 GetGlyphDirectory
8818 <001C60D8A8C9B5EE3102C490906AB1005BC50FD46C222C5B31446769E6
1FC135EE0D4FF7A7ABE30F2002EC9AD6669F1339A766E1A0E8729B7AA2096D4A
671E6F66EC76A805E1884AFD9F7366CF3832D757E58A804CB659BEC40695F6A5
2F16BB5EFCD46269A8CB44CB641B6F13B02BD08075EF281BDCCF0889359A8AAB
8483FFE9F69D1F2D043472A5676BC90FAF72AE371F4B9E6BE6628E3CB88B7EF8
286606CD3C3EA6B51A7391454B5AD51E5C6710800D7785CC385D82CD59470217
08F45A52CF8E691631FC07ED17B77A5E5F46B434EF9879384575E07E6567BA94
1A7EAEA037A74AA749576D744187BDDCE58130632DC087D4025374D9376AF43D
C17958C7BD23E6992A85525D1D30FADF5B678A947BB2B9DD7F6738432581F466
B75AD3> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
104.424 191.535 mo
("r\012\274)
[9 0 ]xsh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
122.424 191.535 mo
(\022r)sh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
104.424 206.798 mo
(\021\200 Q\015\273)sh
170.604 178.119 mo
167.484 178.119 164.964 180.639 164.964 183.759 cv
164.964 206.439 li
164.964 209.559 167.484 212.079 170.604 212.079 cv
211.164 212.079 li
214.284 212.079 216.864 209.559 216.864 206.439 cv
216.864 183.759 li
216.864 180.639 214.284 178.119 211.164 178.119 cv
0 0 0 0 cmyk
ef
170.604 178.119 mo
167.484 178.119 164.964 180.639 164.964 183.759 cv
164.964 206.439 li
164.964 209.559 167.484 212.079 170.604 212.079 cv
211.164 212.079 li
214.284 212.079 216.864 209.559 216.864 206.439 cv
216.864 183.759 li
216.864 180.639 214.284 178.119 211.164 178.119 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: NLFCZI+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/NLFCZI+SimSun-GBK-EUC-H 2 GetGlyphDirectory
6543 <001C60D8A8C9B5EE314C24DD3E36A48A39136A60434C9C64FD15E8C9AD
439C9C605D02356ACDBDDDCEAF5539BD1090EB311F027CE14C8F47ACD7E9BCBF
B86D9425B70922F2E74AD5E3722258B6D4C0EB3D51BA083A3431A0FC90999162
8191CA8B18F278F32B872F09A7A134817E777149121F699CD60EF50B5B98CEB2
D716A741223F6B174FC61AE5EB145D6D17478D1B4999E7A9D138E25D83F165E2
F829974A3A70D10EE2F7DCB936B9F79336E329115C3E338C063F22DF629DCA94
9F331B5882506E78299D0278E0B6AB65BFE560FA4A7A12CE64C006F83CB0D5B4
0022279296A439DF8F1A2FD74113AE707984136FD5AF09B640008DBBA39EF3B5
04DEBC642E254AA9ADF0D967427BB6EB265CE3386968A9B305E4446E9F56CCCB
E24092CAA98663836AC027D45AE7B3DD83F941E2CD84E76786495AFC28CA7A53
C2A44877B6A794D1E8724F70B0DA6E015C0D0ACEE6EBD982B15A2C86A8AB> |
3937 <001C60D8A8C9B5EE310D99A787756CA0BA53AFEC27BA629F5BAE03A6EA
977FE9567B41FE2E45D08B2B9BE75899F5B906C4743FCD1EAE4B5F868DA2C9D0
86812F8B9B3E4E7CAB8C239BAFB5A9C723373F9BD6099D1CF81964435BD67EB1
544DFD962AE3A4B444FFF362DE4C0907E7B1FC5F31D89937044E4E225DE73031
3450DF27C4685D1DA4E4918BD118B90AC2573A1635EE77E72383AC359332A76F
9D28E855D0A8DB6E36C30FA222F5BCF5B7AC77DF96E3483EFA6A9A6FD3089F4B
4E6988789D95CCBC3120> |
!
end
end end
%ADOEndSubsetFont
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
172.944 191.535 mo
(\000\003\031\217\017a)sh
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
195.444 191.535 mo
(\022r)sh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
177.444 206.798 mo
(\021\200 Q\015\273)sh
93.924 148.659 mo
145.824 148.659 li
145.824 114.639 li
93.924 114.639 li
cp
.531456 .446387 .445167 .0943313 cmyk
f
91.944 146.679 mo
143.844 146.679 li
143.844 112.659 li
91.944 112.659 li
cp
0 0 0 0 cmyk
f
0 lj
8 ml
143.844 112.659 mo
91.944 112.659 li
91.944 146.619 li
143.844 146.619 li
cp
91.944 112.659 mo
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
108.924 125.079 mo
(\022r!Q)
[9 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
108.924 140.622 mo
(\025* Q)
[9 0 ]xsh
21.084 65.499 mo
19.344 65.499 17.964 66.879 17.964 68.559 cv
17.964 80.859 li
17.964 82.599 19.344 83.919 21.084 83.919 cv
66.804 83.919 li
68.544 83.919 69.864 82.599 69.864 80.859 cv
69.864 68.559 li
69.864 66.879 68.544 65.499 66.804 65.499 cv
0 0 0 0 cmyk
ef
1 lj
10 ml
21.084 65.499 mo
19.344 65.499 17.964 66.879 17.964 68.559 cv
17.964 80.859 li
17.964 82.599 19.344 83.919 21.084 83.919 cv
66.804 83.919 li
68.544 83.919 69.864 82.599 69.864 80.859 cv
69.864 68.559 li
69.864 66.879 68.544 65.499 66.804 65.499 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
30.444 78.315 mo
(%\360#k)
[9 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
48.444 78.315 mo
(\022r)sh
95.004 65.499 mo
93.324 65.499 91.944 66.879 91.944 68.559 cv
91.944 80.859 li
91.944 82.599 93.324 83.919 95.004 83.919 cv
140.784 83.919 li
142.464 83.919 143.844 82.599 143.844 80.859 cv
143.844 68.559 li
143.844 66.879 142.464 65.499 140.784 65.499 cv
0 0 0 0 cmyk
ef
95.004 65.499 mo
93.324 65.499 91.944 66.879 91.944 68.559 cv
91.944 80.859 li
91.944 82.599 93.324 83.919 95.004 83.919 cv
140.784 83.919 li
142.464 83.919 143.844 82.599 143.844 80.859 cv
143.844 68.559 li
143.844 66.879 142.464 65.499 140.784 65.499 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
104.424 78.315 mo
("r\012\274)
[9 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
122.424 78.315 mo
(\022r)sh
168.024 65.499 mo
166.344 65.499 164.964 66.879 164.964 68.559 cv
164.964 80.859 li
164.964 82.599 166.344 83.919 168.024 83.919 cv
213.744 83.919 li
215.484 83.919 216.864 82.599 216.864 80.859 cv
216.864 68.559 li
216.864 66.879 215.484 65.499 213.744 65.499 cv
0 0 0 0 cmyk
ef
168.024 65.499 mo
166.344 65.499 164.964 66.879 164.964 68.559 cv
164.964 80.859 li
164.964 82.599 166.344 83.919 168.024 83.919 cv
213.744 83.919 li
215.484 83.919 216.864 82.599 216.864 80.859 cv
216.864 68.559 li
216.864 66.879 215.484 65.499 213.744 65.499 cv
cp
.750271 .679713 .654902 .901946 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
172.884 78.315 mo
(\000\003\031\217\017a)sh
1 /0 /CSD get_res sepcs
1 sep
/NLFCZI+SimSun-GBK-EUC-H-Identity-H findfont [9 0 0 -9 0 0 ]msf
195.384 78.315 mo
(\022r)sh
56.064 18.699 mo
86.964 18.699 li
87.204 18.819 li
87.324 19.119 li
87.204 19.359 li
86.964 19.4791 li
56.064 19.419 li
55.764 19.299 li
55.644 19.059 li
55.764 18.759 li
56.064 18.699 li
cp
85.944 16.119 mo
91.944 19.119 li
85.944 22.119 li
.750271 .679713 .654902 .901946 cmyk
f
143.844 255.579 mo
174.684 255.759 li
174.984 255.879 li
175.044 256.119 li
174.984 256.419 li
174.684 256.479 li
143.844 256.299 li
143.604 256.239 li
143.484 255.939 li
143.604 255.699 li
143.844 255.579 li
cp
173.724 253.119 mo
179.664 256.119 li
173.664 259.119 li
f
118.284 36.039 mo
118.284 50.019 li
118.224 50.319 li
117.924 50.439 li
117.684 50.319 li
117.564 50.079 li
117.504 36.039 li
117.624 35.799 li
117.864 35.679 li
118.164 35.799 li
118.284 36.039 li
cp
120.924 49.059 mo
117.924 55.059 li
114.924 49.059 li
f
118.284 94.299 mo
118.284 107.619 li
118.224 107.919 li
117.924 108.039 li
117.684 107.919 li
117.564 107.679 li
117.504 94.299 li
117.624 94.059 li
117.864 93.939 li
118.164 94.059 li
118.284 94.299 li
cp
120.924 106.659 mo
117.924 112.659 li
114.924 106.659 li
f
118.284 146.619 mo
118.284 160.179 li
118.224 160.479 li
117.924 160.599 li
117.684 160.479 li
117.564 160.179 li
117.504 146.679 li
117.624 146.379 li
117.864 146.259 li
118.164 146.379 li
118.284 146.619 li
cp
120.924 159.219 mo
117.924 165.219 li
114.924 159.219 li
f
118.284 224.619 mo
118.284 241.719 li
118.224 241.959 li
117.924 242.079 li
117.684 241.959 li
117.564 241.719 li
117.504 224.679 li
117.624 224.379 li
117.864 224.259 li
118.164 224.379 li
118.284 224.619 li
cp
120.924 240.699 mo
117.924 246.699 li
114.924 240.699 li
f
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: QJJAAA+STSong-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QJJAAA+STSong)
%%Title: (QJJAAA+STSong Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QJJAAA+STSong def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -315 1063 986} def
/FontInfo 4 dict dup begin
/FSType 4 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 25185 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 6 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
11131 <001C60D8A8C9B5EE310091ED93F88BE8C9BE39F8739C363FADC439879
2171F7BE302735760B3198B545340E059B18C742BBF0ED0B67CE9500C207303B
944AE034CAA1C09EE76420551C7A6A58FD87EB01FA19C72F32CE2D5F0B091CCE
1A7FFAC33A10C17782B89FF6CDAB99DB1757E7CB20A198916AD7CB95D3C73EA7
FEEA2EF6782D74595EBC05E8060C83C1010073E1E4A14EFE83D2DA6BF0155B1B
3BE8682503D28257B9490E87B80594218046F5274CB1224C6266993D07DC19CE
599AC679065F1BAFA3EADDD4AB00268E06A41F4C54CC965713279B1FC018E2F7
F2A13827006A237C7899FFBC63C868B11038FA781A6B84B064E81E8D58D77C23
B062350FC44BB6293C2D17CFABBB89EAD430E1553778494DDA4868AC0B43B0C7
2E80821AEC25D2CBD9890FDB7A9761596CBE1331B161477C3CCB9B899C4B0B44
76F32E6D36EB1CD63FBF227C5E98238AEAFA0A49D0581B8EB9C493AF47786EF8
A4D6DBC64CC1EFA29D6BEDFB571561627DCA110C7E33A396E8505616DB02221B
A935A8947E3D90F762880895B3FBF97DB636569E61CFED4DE9EBC8B106CFFF8D
5A078FB2F6C7B76F6FCA3D7768CECE352E7E440F28C3E067C2FC730728F185AA
14280C063F825A602F7A537EC231650B177B327B38855A231AA7BAB08C4BED0B
E2E40B7DDBE44961B4F11B69066A1FC67B208A5BCF553CA105C2AFDC308873EC
25D21FC140D906CB4DC4C5E42D29805B0E53A0047B5200BA622B511445B17AA1
6ABC46157E35EAB18C248E862E383FE173B557DCC37F27F56B2199686CD34F66
6687CA8A2F845F865598864B7B2C2604F49BBD490FF5CAA531FFAED186D53DEF
941> |
3 <001C60D8A8C9B8707C25> |
20 <001C60D8A8C9B746F4ABCBF0C57DE356AEA7815A10A59F085DAC172ADBD6
0559135AD9E454249A4A55613B090EEAF74B9ED3B25C1594DE153401245DAA6C
04D49521FED3F583FC44CA> |
26 <001C60D8A8C9B746F4E5F9EA6F7AEA20BA965510C542DC96271DE1661976
D4290CEFB52B3EACEB8FC4801125003EC6872173E9C8415B65000966692B0CF3
7B> |
16660 <001C60D8A8C9B5EE31009D38938C8064AC4367BC89F7951779DB8700F
0D587850DE7FED0EF32514C0B9557477001B8C12B43E74C232155E74804CFCE7
CF1794E293CFBDDE8B936198DEB451077DE9459190D562E85D902D7E74A74927
C0EBCA264A22AF127674057604B92790DB454E97FB88DC71F646DE1EA4BE3DE6
35BEADE611842E9B7EBF5042BE91DE4B84D5B6490825C3E5C6C6020E3A1E6439
7E78DF279A6B3F31EFA40D1160F5ED77D9721BB028BB8181C109ACA12E42581D
B6A1E62595A3CE13AF6AC5CBA3C31C5C3BC9DF7BA97F1FAB435A01B4C4C95FA6
94A9547D30FCBB3EB1908D1448557EECB5855B9823955B24E876BCDF6CFCDB01
6C6F4F3060A99E2F29D88A46B342FC6FFB73F0EE5CD9C6993078107A334432CC
45FBA0E59BD07377027D23C47E004747B2F82069D237BAB1DD7E09DBEEDAA00F
3D9F276F8863625B0EC602653B267112DBC87BCEFACA3F6> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QJJAAA+STSong-Identity-H /Identity-H 0 [/QJJAAA+STSong] ct_ComposeFont pop end end
%ADOEndSubsetFont
/NLFCZK+STSong /QJJAAA+STSong-Identity-H findfont ct_VMDictPut
NLFCZK+STSong [9 0 0 -9 0 0 ]msf
89.384 723.299 mo
(+{\000\003\000\024\000\032\000\003A\024)sh
-97.756 -28.701 mo
-132.756 -28.701 li
-132.756 -46.7011 li
-97.756 -46.7011 li
-97.756 -28.701 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 192.756 275.071 ]ct
[37 0 0 20 -326.512 302.772 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 37 
/H 20 
/M[37 0 0 -20 0 20 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 37 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&`W-&H.08<+!<sY,!;c`s"sLPX!st7$>MoJ`#(WXDq>f[Y!sX7N9&BUL0"Bg>"qHs4]Y%,Eli?e\
!=FDWX8tWhirB8jJ?#TJ6NZ6I"#&K`f\ul4'ViD@]`<*R!Ta:_&<O$mX8lVg!!*Xkr2Ka)irB9^iS<8D
gBI*Io`,(6Z+[mN]`Pp\MWOm>'qkE)!-RE(!>V4'WWB)@jT#@Dgtr%d!oDQKk5YQ7Z+g4N!5AHG!ksKt
kl:c.TWS3p!3Q4$!H\P1!!+:8po4@9#5J8g!!/2=rnRb8gt^`B)X.5'4gVm!]`c'_^5rij!!+aJp8e:A
$L7Zl0E@d>WW@DQl2UjVhYQ%1hV?s5lMpuN['fnH"2;I^^AY_HXdoX_!!4mNV=ptmS;77ImJm;DTq_7\
!h"cFli7<iXPDXfhV?lBrnIS2H9LZr"9MiAU:1'7!ku@^rk/KLUo(l+'Cc&+!!,]nO/McS"g*oNXI'Of
!!E<rWf3_IWW\BFWg++_!!:qMZi8bfhV?uBgtU^f?/BAd!"T0U]=t\;]=u"mZDY=K\W6`drk/?3,Otg=
!b8:4VLPZGX9PD`X0&@HOoDE_QQ#Dp"p/;5WhOs@ri-0pP,PCWG`Vj(!L+So!##UehQ\T\hVR"R?e!uO
+]mFRh.QE]r;[E6KY5%4^9`p-]=o6mUo8^E^AbeI^98mU!!*4?ri?L0UO/c;XVD,(Q=uieX9"q6oDepq
DQ3W8$DDd>W2^R<Ng+4Gr2Kde*qK@='A;6ui1VEie_gE2!**S=J):1\!T&S'!"]Qs^:q:p]tV'6Y.dI3
:mnrn]`Yp][3kSI!XNtOr2^.(-_7A#"@.Y9X9#.<p&G+!Fo/0EV^S"649Rs%W;NXtWN)[6rW)]n$68!\
h;6oCcN&ISrW!$Xe_JsZh#c9dXS)Vq'VrJB]`>eG]aMKe\qYsN^:h4m^:jN[!kc!/p](@,OfeG\"g+hF
E3$,9X9#7Vp](=+Nr#a[Wi<"rE,_`SWW9$rWWK/q2YR1c<SuQdh;6uDgtCT1()>0QgYLQ>h>Z73ft@([
"<Xh]]tXHY"h_RXQ[ZC:]`Z!^\QAV-!Z.H1q5a[rJnV(UX95Q*WCH^a!>q:%WWfB%UO[$QoVqqg8,3-(
J`#;?h;$i@fA<ni%C=jFgYL]?gtUW?h;6o)q>^OBWW'I-\d,dMZ'CKU]"J!Rr4Ms@!kMP;r;Zj<Qi<ub
WsPf,Wh5r7I@dI?ri>ao!iecmr;Zj=Pl@NeVl$AhS=P.WR\m(_W;NXmWWK%h!rN#uBE#sicHOSVLlF#8
J]u`peC<%$f[na.gYCQ<h9>`r'bN)K0/#"51G'pi)F6GF4?Pbi5!M:>5sRe+7nHBO>#5M'!$D^r+=&3Y
,pslW&ed&R/M8Y/0/,+91GUgH3BB;h83d@W!$D^s+XJE]-7C)[&em2U/MAb20JP=>2)I6O4$5\n8O3O3
!.k3&!87F'~>

%%EndBinary
grestore
np
.750271 .679713 .654902 .901946 cmyk
%ADOBeginSubsetFont: QJJAAA+STSong-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QJJAAA+STSong 19 GetGlyphDirectory
11931 <001C60D8A8C9B5EE3100B4B4B3B3FFB1E9FC9AA43BA30C3BC1E7BF60C
181FB3C346195FF3179C11A4D8DD28A34EEEA1354730C3406964C635CBBBA239
642C4FF928CF38F2EDCAD7E11E9275DF843EF4A4A5A905AAA36E2BEB1027BD3A
31689BA3E008E41AE593A7D1A6B054244676BE2DA875600D863F075ED0B46609
E0C6445818B053E36C176E9B716DCF2FAC2C45F49E2BAF81F767088FDF35B5EE
7AF288145CD2685C55AA946A76E8CEB1A8BDF9352FDF22A662A0BE7EAA900930
0F74A7F0327CBFDDD150A875B004FF2F9A256FBB93044381F815EC71CDE48364
3B9FD4AB4213E99123922B491F66A50E3A7FF67A2008E4B3CE9C69766569801B
14A2B49E4FF0843DC667D961019BA1E515A322BDDF2DC25FA94883650B3CD9F6
C648378FCC7B796E55CED94B67C35BD76CD482EE81B03001903F55B285C1D650
2098A13DD3440221A430F5130B5CC20330A719900764B122D> |
12467 <001C60D8A8C9B5EE3102197FA1728B081C47BEE9B9EC8BB0E81E26D8B
F7AED0BAFB1DB210360CEF3AFE13F609F42B6D869B7684114AC74568D8277F40
4C55AC9B0BF74E4CC2DA686D31B89BB5E18E8CB9FC6DED72960098C098083B09
42E1FC21B3013EE0050053734F8AAB3E76654FDC933D51AE1F29A7098DEC3212
87657C29A916DD161AE94353B7D4528EC39E05083F03AB1C023A0F7AFB88B8AA
1C046993035178BBD30A5044EC611C3E8FE369C21A774E1117D02A5793A3A7DC
2DE6D32961209A5F746A93BD7E2D5EABFB7D05CF4ACF473D9A74D45D483D9D81
E48C95E028326FBE1E4028AFFD632CCF344AC5C6B6E9DD08880909FBA4C84B9E
67F09746E265E51C6AADC6485EDD4DD2044A2B647C76A8C02841FFA655FA54F4
9DC12AFC3B63552245DFCF3F80115B5D0D15C609199FE6A2BAAE3AE3C5A6ED2B
652C0E6A636890DA1D622D44A90446D5CAD5274F426BA14487DAF06C15E83C61
15ADD321CBD5AC6DE1ED82A75BBBD9B995F742C8716042D4193458ECC9AE2AFE
84361B0E8B879E5E2404493212F672A3FA3105D2DB251D36FDFCE8FC2E0AF9E1
3DF0C621C4303BFCCA08DB70147AAFDE487D456654EF0FBEAEAB79C071F600B9
72829F66904A4494DF3B4D897B3B2FEF2AAE8FD41C3E24E7B5E7CB44178E8712
9F4A68C9EE4A7466DDA6B5F8C379AF706B86FB62406E86CC0E7D8> |
17653 <001C60D8A8C9B5EE310333EFBC7172C444CC3C0D289A951DACAC93616
BD101433D72EF064BC1D873D99EDA99F886AC70483D06AA4C812A23E14A9DDF1
AEFF6B10098F3BFF1FD7D42E6094631FE532A8474C19D07EEDF3680C1474C45D
002A241C56EDFE253193B4FD120099D5256477DA2882B7293D0BD6806EBD576F
0A267BC29B1BD0F6EE241D07AAEF618BF8AD768E1718F10C721A74F24795CBD4
C69C1F7ECCFEB00A079770E8898EB361905FA6E4F088DFEC3802D2B51542909E
A4523E25EA625DDFB51D085A8064D010EAAA0896336492C20CB3D0779> |
14748 <001C60D8A8C9B5EE3103AC5192FE1A2447749E4F3CEDAEF9FF9B239AE
EB1BF610A190E18585CC41D1031E56AF8649F53469A1BCC99EFE1996172342ED
03BEB78DBF1FEB25C39F54EE7D2C02D4F69048B434C25138959B2216246F5810
5EE929C231C20EE358390F6F611165FAF5BA6214546DC005DFEB0A48A0DFBABE
55D79581BC37BDD157FBCC5CC87D8951801A61A2101910EECAB84E73AF42EF40
FE6180400B7A427F04613731307AB0BAB19FDFA764AE4AE5623DEBF675B061CE
6860D40D538FC2101B932FD1BE5724D6EE31A6B2F988B6517AEDEB3030A51DDF
947C1C74C82AE869892CFDF130A59210905503B7CFF01502C2327F34A661A71B
F1C0A5D00E7F7ACB36C47D237EA2665BFAAD35177DF475663739CEC0E2A98B00
6C8E59B33B772927559A53E45AC3233BDC1B5FB5720369ABFAB77C518BEBE2CF
85EA2D2A821FCA218EA201258A7B1A8030D7F7FF53B20460542D9CE235C1FC4F
F78F4A5D882284333094CCF4D18417D0094D14E4F9DE3D0CDE4144614EFD0E45
133FB3DCFE082861E6B654E1BB9D5FFE62E09779BEDB223CAB608A3390FC1AC4
28E2C814DCD5C8D1AE46D8FDECD95FDE4FAF13807EF98CAB5F75AAC06B89102F
064452C92FEB23809732DB1B980063CF0CB8C102AC4801C4EE90BCB6FE5B488E
123635436D87F8B192FDFBDD5BF4618D4EF47642B684F8E9E26044F6A25F7AE5
DDF241B0A001C5F6FA17E6A68D4FBD1929354E53F3784C432FAA8B7DA7081313
001AD601FC6E2DCAF4F363C987F4A5B07A21D007BB76104B1A4810511C646B23
466C8359099703D17A54C41A0D5B78F719D6C8012C8ACD7145B94AA6D1592DA4
448CE5A4A6DA21EC0DDBF4E2B5DEADC858A78734271DB9BD5F1A44F2B963284F
900A75C43DB82D48F681CA0F7D08A2A9CA74AE883D218167D0964393219A2839
E02AAD9414BCF6B44A659E93712525D4BA8855E45B3FA92F62AC4> |
13031 <001C60D8A8C9B5EE31009D36CAABFEC28E99D676D04096F0EA500E0A8
69E8575D0BD500236282CF12C910B2D6036146650F86C50B56762A1C289D5CCB
79632BCCEC35DA68FFCEDF3EF533D29DB15F2CFEBF2FB85D32BB2700ABE2B81C
463BC496757020B52AD785142748173CE26230C7FB7D284FD31713F23D1140BE
55D7F321455C9489BFE7168CB0C23A120A6191170E7843766C6ACD66CC2F4DD4
9A29113442A42482753CFDA40E773B3B4C7AFA62955711D8E5F2EE1E9B44F8E5
01C6341C9168C16F13AF4B6BECB53D179A4FF5415488962924B4C2797EDBC268
74E6BFD2055D8621010886115C4B60F782E5A159642B15E106FFAFF17AF23EC2
F3AA8A15B489DA09D3FB585BA8C82623D8F73844873F40556766684388263199
BBC757955192C2DF8960D7422DE8FB079F572FBAB73893067C2908BF4398C79D
413B060CB2100F579A97FE9260C75484EE2115DD49E25F7B5AEA39A3E24BB86C
F9EBC3A793DC065E3E282D9B203725151EB26A06A7BB00AF63EA4F35DB18C2DD
CA504E527A3BBA976E852B2A21039E3F87C222C06179C997E463ECDF936B1DC3
C2CBCB87C5218B8CC71A732B7CB6A8C22D175E11FEF5C7AFF788FCE8B517B33E
BF66D340D43FA176321A000BBDE1DE07B50227ECB1007B979776CF9178C4E14E
A9BC2165B7F59D32156A3BB5F9CEACC5B7B03DE83> |
16456 <001C60D8A8C9B5EE31020BC5BB50B73BB0D38FB0AA3235F8E6DA6D7ED
45AAEF021A1908666AFF08C4566967E64A1DDBC03A66AC56120C89C216C52DD7
B307207E042F5C0DA1B57D370A31BD23076278CD8F00BA0009CD6510EFCDBA7B
3DC087BEE0B3291F6797309BA79C0066C2F29BD52BB5D744C7FFC4481415200B
26E68068925B7ECC1F8C19B4314FEC2DE9D835E6F6834E9B5B1CAE577741EB16
A79B4BF6F1AB2498918D0EC933826C46A5C1EAF2198FE7003A442D4A8C3687F3
8CC9604B5C08F620E53EC44435B56DEDE544637126646C950D91D275F457AED3
BB34EECDF19199FC2230F84C193D5C9D96098CE13D7AC00D9865CF26DFBCE112
360417A79C39393D0986BE63439FBF4E4238BEF73C43D17FDE0D89B2842A609D
526523490D7658DA8D6F4FA903C01F6A7193E70E0583624EF6C4DF1E1888B61A
82B9479F776EE695355FEC8ADBE4F6FC76CAB2C54680DFFCBD9ECAFF5E5EAECF
9A6DCB28B1A7AC016E6E7A02C61D59C885B65EC2EC93E9D91769A0D1E411994A
10963FE4DA587308A2EE69ECE969803165815CC4F3A1D486FE3239E05FF5C1D7
8EC5377DD4201ED1B0EEC801A825254780CF8A25DB8DCF1996816FF575EF5CA> |
12314 <001C60D8A8C9B5EE3100F783C2E8F601966EBE30DFFE988F25B0B6C58
5276A8DAB5C0EE6189E4C9A4EBDE5D6B49BABF49F6F6898270E7BEDFF7B3E80F
67A19B806EE7492372865C826CAE7247B8AB19C3F0030C871071372A8E78A0DF
813A1C474FAE9BEE4265564EA93F1015E25F594D275AD64ECD51E19E000D34FE
C956A394B9FB97C0523DFC509C6CCE57D8EC33155AA71671A6572FEC64612EA8
97AD74FBC6A755E6CE7D59B53A77627F27AC32ADC5E34268E07D2EA4F7F78B19
00C3C3FB3B42A25537AA02F02C85D1114975CDDE061D0F10BC20BF70A204A18B
CB24DB2C9F77B7B85B7846FF0B452EA77B1551DB87CA7B64D21D624742386026
A3D9B73B9524E20C19C038626F2B28DF1F2C9E10D1E957AB50DC2E889D5F69E6
7B6875F78EA5B060881F04558F0FD0FFE6D03E36A4AB07AAD9520FDBFBC8BFB5
6D9D9703109226956493533E431E847FFE2C11AF3CC8E112E27BA2200CC76B88
BDAA4C27AFDDEDACC79A0B446B7568D4BBF476E546C2888568427307681E43D5
00A3EB523824253111723E8E85D1087982DB3E3C5A9047840> |
12689 <001C60D8A8C9B5EE3102A82CD1E16F5911F97DF560FCC42D247CA43B6
219A24C9E237A5E760C68F0ED3F25D49D949BA6E2A89FC7ABCB18AC7106E9DC6
D93724C14B7F674CB3A15B7507A03293BAA85724E9EFF2419310D98DB1B30CD9
E3FFFC1593FE7D7B54CF299F412ED2DDF7A9940F89A59F10CC1CDC79D73D2963
2C40A092A6747D87F6B49D1A3FE40E2CC01EFE9EF713A4AB246C677EA75720AA
2469B7CBDBCBCEB65F16B8375D55FB64EF1B2749FE444D42D76D5FAB24763F56
E81BFB03C5262E20AD208C28A92BD81514323800144EF09C1A5F188BE69E9530
66F84120B2827C3E75E9D0A5C014B467C3CC46F341B66402246F94B4299718A3
D44AD4C58CFFA709AAF7BA6F55A8374EB41600644B992089F48CE57255CD3592
DC48CBE04C959B2DBE22210EA99FDA8255B754BC92B50AA8B64D33CF0FC80DB5
F9B4FADAAB2C525A2843583B79F740379316B9D8B281664BC466712D77EF1540
72FB62931DF9DCD2E860A202EC4BC> |
14987 <001C60D8A8C9B5EE31034A5A238F989DC17F480C7731A6EB227146D18
9D39BE5D552BD8418A0B1F4D444BDAFCB4E90E5DA8D17913AE74FA706516EB31
5402A8489AD2DA84FD22B87B80C7C5E7496B63ED4F3083E2828353EE155C0268
AA16C9EC8D755B833FAAFF1571F2BF7852AB6998A07C0F9501BCABB237A4936E
15B6150097EE087B3F511C563210DBB5AD5619CCF885A6C771C37D7E3FB987B4
75B21B414279DF7966F3B54121488F1B23690FB7D0CC6615178A8542DED47042
C8B9EC2784B80EC15C1268D9D23536AE6BC78042015FE836FC8EF58D34E67E33
9E3BE2C2B9868F102DE5EE9A4736EC323138115752DD94EC6A9B037BFB34D89E
B306787AEE99C11A4F3F04C562AD0> |
14604 <001C60D8A8C9B5EE31008204864CEB897136A839286ED6D339CF82A72
B2407BBA294AA119EA6D646101A0E762BAF62FE1413D530BC943C1BAFDC58738
A7D1ADE17646059077B337141D42244236480093188EC67FFF147CC98F355445
E48C285EA18A3CB8E93B8E38555A7136A161EDE965DB6ADFCCC3AB474F96C2EC
9C3DE3A711526D2B690711D89CE959BD2B898EE7974B24A43286A280680C697A
99FDF4A8B80AE218B06A40FC7490FF0B2B9F7063585A878458D253F2887C03BA
AA4ADD28224868FF1FF03A944FAA67C032371A0E2937FAD4F05A4736CFF287CD
ACB9061F34085CC1F340F6FA753D634CAD4F13516B0AE20BA4C85954CCA085A3
95C87AD3B83161932E2F79E8415B8ED0F9960B6BC892E75DAD0BC25705F60288
D52D89E47AB9A1277FB0EC97DC1E1427F7F656B4C92870B0F7D9867F3411946A
99C384EF1ACB8B05B5033DC783DDC8D2FD31D016E1D4B861D955B5ACD4EC1810
E6FA8BE0BC6535DB666A40CE8FD2EC8E24DB82E7936C23245B8E00E0B6181CAC
07A79F6BA8C9023A397955CC63294FBC76C1D7E9501411DE026743F1BAAFD741
63CF5F6CEBFDB6BC7359DAF80935CB38833D6A5A1CD707CA59E07C6804AC30E7
78521602919DC7F65598380AA3E10815710CB85FCAFDF85D5327EF2B07972221
9A99B7427F1541EEACEF50F8B2DAB6C9D16DA2D86CC92389EC967EC25D90369C
846C4B61010> |
15178 <001C60D8A8C9B5EE3100A99921123E6C41ABD9269128904995736DE87
00C4193130CFAC2F74A86C9B4377529F36D821751F9C0F057CADDAF000413B79
FBD0B974D1FE0975578F0867B103D7A6DD9FC5F5253AFB27C742B42429CC415F
F6773A9E26DFE05B74F1A036C0AAC279465DB6C2686E9E64257A7FE41380C6FA
A442EDFAA312A478128AE8D653DB4AF832F74473D6AAA3D5A504BBF812A8B6EF
1E37EAA9FF2AF4180EE404B75FA2A26D6C88A395FC0C511990A056E5406ED02E
711A4307E3797CC46ACB89C5AF5571BA8A688A9D524F040C21ACC1CF23D78FC6
08E4E816FA0DC244E5E3E087E412B3005644D66E4017C2A5D052BBDADD91588C
BE7B9D5154E082CE52FDAFFE3AC5BA8BB7CF217F3E39D8AD27094B42B9B1B20F
021E0C76BB43A9756EDB9F4DA12CCF5BD7AAFABD09D94302E3793D31A2366E6D
C8BAB2E91A1EFD3D26DEA4365327F304DD54DBD1D5934CC4EB95F3A20> |
21 <001C60D8A8C9B746F4A4DABFA0C4CF47B99B8F29066D5F46F319FB9FE9F1
FBD5BA9DD0B2830045748C4C529BB8470FB2843ACA5D000E064B64D08BAE2DA7
3692491EECFF051C734F2684668899168E98633E952E80BCA5F43C754BE06CBB
A32ADAD1660667A8E08BF991B7FE859B9B2A8EC44B27672B62F5F77F13F5A71E
D5E26978874070DAF19475C4947CB2538BA70CF662991BBD2E292621D422FD> |
19 <001C60D8A8C9B746F4B5B456375C5C91AA6F48F4DAC96238C966780DFDF7
DC556CEAB1F0763AE30FC36AFBC6013706E2DEA1D8857AD53A4083E7E3EC449D
ADB1EEB7BBDD2D58EFEE5076CDA36161DD7410B94C4817A384DD69CBB891C586
27AE375C1F1AB8B30D32BDD532F651D3756C99227D4442A156D7B0BAC79F> |
28 <001C60D8A8C9B746F4ABADC0AF44900B86CB8E74D271B0E8C73EF4D77EE6
BBF674F22C406B7D855694A0BA1328355A8336D62858DB6E525876FDD04DBA1B
70D3015C625FC33701B324D820B162E21C39B786E418BCFCEE204D9B6291A900
E0C4AC96C654F1ED6FC0E8F48EC71724B7852662143604A1338B860C8504FE61
2818EC8D00E8C006AA95F0BF95F1494BA58E05> |
10183 <001C60D8A8C9B5EE31020F8DFDBCA6DA15A2D1A2A7C8CFAE41E2AE43C
425E28E8E9737BB6A7F9DEDA174FFFCE23BE0D7A6CBEB39A438724DE55F98BC6
1D65FA46EA123F4F69660B7DD3DC8CF83414ABA6C97172D48820378F41CDD8AE
BD1EA13F3671B817D38145ABD9F11459CB001F0359F3B4FCB5552DED0A159DB2
CF5FEE43EEE9FCB9A0B12C2F429F4DEA43C9DE1DA83A1ABA5211E0FD9D5C7AF8
AF28AB3CB315DBCCC23C10AF95CEAA120D4DC2FD4B3D7AC7D697CF63A0063680
9AB084CB645F1A3C07B545CB37E55C01917853108887BF93CA64103F8EECB24D
A4323E5816A3BDDBFDB5103D05F1BD8A60691E9B030D390E8D95B0901E9520E5
35B4B1EF755C401A71DC64CE1631B1D00B3D5204229A23F14E7A5A801F23556A
ADFA6C0F19B678910184A6A4B2A907521BB7F8DE082D94ABC599E9D768558859
5AF493D45BF0EE76A5F7686F886BFF9D64710D5AFB84C9A4CD6F20E533216BFE
41FD6A376D7E6586E0D7E6511F951E51196EB59D22102AE431552FB1AE2AAF13
6F905BCC07F5B31D9132AA698FD47A6D35253B05CC9A8DD58B3F59990785DEDF
8C3A1B63C2070B158C9BC65FEAA71CC6C9261F3583A5E613B24153FEA05DD90D
1573941C07917C5DB4A539237D1DD40D68CBAD15AEA> |
10335 <001C60D8A8C9B5EE3100CFCE245AA340F2A1353F7D3341AD40540329A
88E1C68602EDEDA45FBE07930470E0C6A1529FD13A9A0733D81149070C3E1260
967ED8A200E996028794988B6943E3A3F51324EACCF538F3B52057FA2D511DC9
DB86896CB7DB227509E22DE26958FC45596C2DB6DD7E307C45A688B91447875A
735B00C27BA67B52D340F21D1AD5624223046B879E79004CD090DDD3B0EDCAD0
03BFBCFE01914C8EE2A00B407B0738BE266604FFA875B68FC4075330305DE755
271CAACE5CEB381BBF317B70000A852AD172287E353221C2D511F11DE0CF45AE
92E0B492AAD6FAD0948DC65FCEEE879E5ED619E6C18DB326207F41F276248D34
FB728177D47B2852F5D95C24DD4805FC774> |
7643 <001C60D8A8C9B5EE310D695297B561116BB1D85CF0F22494A38C972778
A724200A79EF6F0AD5764E9CF1A83E8A20B5224A78D51D4834E08CAC841A0305
E7C5E748390188F951958905E4385BDFA4A0F353A1947FCEB1DF7A6B506064E8
038E916677A8EC1EF1F37F9854848A96994911E0358AB84A345B811ACD589C48
D0FE07A087EE0B> |
22 <001C60D8A8C9B746F4AB168D14D1BAA5E5E5A9AAC922471C88F58760DBE2
6AC102006EAE959F4869A7D600699185C305C6F747D9B3AAB2DB2D7530D27385
013B3A5081A35E0B5797B9B8648B14EB23C812A1DE803A17229D398192E932F0
DB693FA17D628163C9E922B6B96035084361574BE75A8645C8A1C7AE9353F292
66A7389A81388C05BF4C86497278E3B134D08D98E1681A513592EF653D496115
9EA306FB444976C0783FC4C8B05F8E71422D6F8841248D4040D2D3983F6D5DD9
8073AA26DBD694FCDAFA4566171E05DCE52E88277E> |
25 <001C60D8A8C9B746F4AB1CB4969CB1D925AED7BB1BA3BC56C629137DEA2D
C39FEB6D4BAC9F85A05D69CFF0AC3992C466EFA699B533F7088983D29A5A33F9
CBF77AC8A407BBADFC4E8ACB188B34CB60FF9E6927409B1493DFAA28D82633D8
DFF3F338A77FEC00328CE03F8DD26258BCB516338EE289DE4C1A8768DFCC78A6
FC42E2E42E5BAD95D56173071C06> |
!
end
end end
%ADOEndSubsetFont
NLFCZK+STSong [10 0 0 -10 0 0 ]msf
49.854 -28.701 mo
(.\2330\263D\3659\2342\347@H0\0321\221:\2139\014;J)sh
313.704 -28.701 mo
(\000\025\000\023\000\024\000\034'\307)sh
232.744 723.299 mo
('\307\(_\035\333\000\024\000\034\000\023\000\024\000\023\000\026\000\023\000\031\000\025\000\026\000\026\000\024\000\023\000\024\000\025\000\025\000\026)sh
.5 lw
0 lc
0 lj
-132.756 -23.701 mo
342.464 -23.701 li
1 /0 /CSD get_res sepcs
1 sep
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/NLFCZJ+TimesNewRomanPSMT-Identity-H uf
/NLFCZJ+TimesNewRomanPSMT /CIDFont ur
/NLFCZK+STSong-Identity-H uf
/NLFCZK+STSong /CIDFont ur
/NLFCZI+SimSun-GBK-EUC-H-Identity-H uf
/NLFCZI+SimSun-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
